Script started on Wed 29 Mar 2017 03:10:00 PM UTC
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gccc [K[K -o -[K[K[Kg -o ovmhello ovmhello.c
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜vt_allocateâ€™:
ovm.c:46:40: warning: assignment makes pointer from integer without a cast [enabled by default]
 #define oop_setsof(p, t) ((p)->_vt[-2] = t)
                                        ^
ovm.c:181:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(oop, bytes);
  ^
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovm.c:325:6: warning: assignment makes integer from pointer without a cast [enabled by default]
   len=sof(self)+sizeof(struct object);
      ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:17:21: error: â€˜lengthâ€™ undeclared (first use in this function)
  int size=sof(self)+length;
                     ^
ovmhello.c:17:21: note: each undeclared identifier is reported only once for each function it appears in
In file included from ovmhello.c:1:0:
ovm.c:46:40: warning: assignment makes pointer from integer without a cast [enabled by default]
 #define oop_setsof(p, t) ((p)->_vt[-2] = t)
                                        ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:40: warning: assignment makes pointer from integer without a cast [enabled by default]
 #define oop_setsof(p, t) ((p)->_vt[-2] = t)
                                        ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello 
vt Proto_vt 0x13e30b8 parent 0x13e3158 (Object_vt) size 4 tally 4
    0 key 0x13e3338 (#lookup) value 0x13e36d8
    1 key 0x13e3398 (#add_method) value 0x13e3708
    2 key 0x13e33f8 (#allocate) value 0x13e3798
    3 key 0x13e34b8 (#delegate) value 0x13e37c8
obj Proto 0x13e3138 vt Proto_vt 0x13e30b8
vt Object_vt 0x13e3158 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x13e3678 (#sizeInMemory) value 0x13e37f8
obj Object 0x13e3118 vt Object_vt 0x13e3158
vt Symbol_vt 0x13e31f8 parent 0x13e3158 (Object_vt) size 4 tally 3
    0 key 0x13e3518 (#new:) value 0x13e3828
    1 key 0x13e3428 (#print) value 0x13e3858
    2 key 0x13e3618 (#length) value 0x13e38e8
obj Symbol 0x13e3098 vt Symbol_vt 0x13e31f8
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 8
Size in memory of Object is 8
Size in memory of Proto is 8
Size in memory of String is 8
Size in memory of Array is 8
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 20
Size in memory of Array line is 48
sizeof(struct symbol)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜vt_allocateâ€™:
ovm.c:46:40: warning: assignment makes pointer from integer without a cast [enabled by default]
 #define oop_setsof(p, t) ((p)->_vt[-2] = t)
                                        ^
ovm.c:181:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(oop, bytes);
  ^
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovm.c:325:6: warning: assignment makes integer from pointer without a cast [enabled by default]
   len=sof(self)+sizeof(struct object);
      ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+clone->length;
           ^
ovm.c:46:40: warning: assignment makes pointer from integer without a cast [enabled by default]
 #define oop_setsof(p, t) ((p)->_vt[-2] = t)
                                        ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:40: warning: assignment makes pointer from integer without a cast [enabled by default]
 #define oop_setsof(p, t) ((p)->_vt[-2] = t)
                                        ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello 
*** Error in `./ovmhello': corrupted double-linked list: 0x0000000001215080 ***
Aborted (core dumped)
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
*** Error in `./ovmhello': corrupted double-linked list: 0x000000000244f080 ***
Aborted (core dumped)
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gdb ./c[Kovmhello 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./ovmhello...done.
(gdb) run
Starting program: /home/ubuntu/Desktop/MOS (copy)/ovmhello 
*** Error in `/home/ubuntu/Desktop/MOS (copy)/ovmhello': corrupted double-linked list: 0x0000000000606080 ***

Program received signal SIGABRT, Aborted.
0x00007ffff7a4acc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56
56	../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.
(gdb) quit
A debugging session is active.

	Inferior 1 [process 7403] will be killed.

Quit anyway? (y or n) y
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gdb ./ovmhello [4P[C[C[C[C[C[C[C[C[C[C[C
*** Error in `./ovmhello': corrupted double-linked list: 0x000000000085c080 ***
Aborted (core dumped)
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello [4@gdb [C[C[C[C[C[C[C[C[C[C[C[4P[C[C[C[C[C[C[C[C[C[C[Cgcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x18e40b8 parent 0x18e4158 (Object_vt) size 4 tally 4
    0 key 0x18e4338 (#lookup) value 0x18e4608
    1 key 0x18e4378 (#add_method) value 0x18e4628
    2 key 0x18e43c8 (#allocate) value 0x18e4138
    3 key 0x18e4458 (#delegate) value 0x18e4118
obj Proto 0x18e4678 vt Proto_vt 0x18e40b8
vt Object_vt 0x18e4158 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x18e4428 (#sizeInMemory) value 0x18e46d8
obj Object 0x18e4698 vt Object_vt 0x18e4158
vt Symbol_vt 0x18e41f8 parent 0x18e4158 (Object_vt) size 4 tally 3
    0 key 0x18e4488 (#new:) value 0x18e46f8
    1 key 0x18e4568 (#print) value 0x18e4718
    2 key 0x18e45a8 (#length) value 0x18e4278
obj Symbol 0x18e46b8 vt Symbol_vt 0x18e41f8
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=33, Size of w=33 ,Size after append=33
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 33
Size in memory of Object is 33
Size in memory of Proto is 33
Size in memory of String is 33
Size in memory of Array is 33
Size in memory of h is 33
Size in memory of String sp is 33
Size in memory of Symbol s_at is 33
Size in memory of Array line is 33
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x1ce50b8 parent 0x1ce5158 (Object_vt) size 4 tally 4
    0 key 0x1ce5338 (#lookup) value 0x1ce5608
    1 key 0x1ce5378 (#add_method) value 0x1ce5628
    2 key 0x1ce53c8 (#allocate) value 0x1ce5138
    3 key 0x1ce5458 (#delegate) value 0x1ce5118
obj Proto 0x1ce5678 vt Proto_vt 0x1ce50b8
vt Object_vt 0x1ce5158 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1ce5428 (#sizeInMemory) value 0x1ce56d8
obj Object 0x1ce5698 vt Object_vt 0x1ce5158
vt Symbol_vt 0x1ce51f8 parent 0x1ce5158 (Object_vt) size 4 tally 3
    0 key 0x1ce5488 (#new:) value 0x1ce56f8
    1 key 0x1ce5568 (#print) value 0x1ce5718
    2 key 0x1ce55a8 (#length) value 0x1ce5278
obj Symbol 0x1ce56b8 vt Symbol_vt 0x1ce51f8
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=33, Size of w=33 ,Size after append=33
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 33
Size in memory of Object is 33
Size in memory of Proto is 33
Size in memory of String is 33
Size in memory of Array is 33
Size in memory of h is 33
Size in memory of String sp is 33
Size in memory of Symbol s_at is 33
Size in memory of Array line is 33
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x25930b8 parent 0x2593158 (Object_vt) size 4 tally 4
    0 key 0x2593338 (#lookup) value 0x2593608
    1 key 0x2593378 (#add_method) value 0x2593628
    2 key 0x25933c8 (#allocate) value 0x2593138
    3 key 0x2593458 (#delegate) value 0x2593118
obj Proto 0x2593678 vt Proto_vt 0x25930b8
vt Object_vt 0x2593158 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x2593428 (#sizeInMemory) value 0x25936d8
obj Object 0x2593698 vt Object_vt 0x2593158
vt Symbol_vt 0x25931f8 parent 0x2593158 (Object_vt) size 4 tally 3
    0 key 0x2593488 (#new:) value 0x25936f8
    1 key 0x2593568 (#print) value 0x2593718
    2 key 0x25935a8 (#length) value 0x2593278
obj Symbol 0x25936b8 vt Symbol_vt 0x25931f8
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=33, Size of w=33 ,Size after append=33
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 33
Size in memory of Object is 33
Size in memory of Proto is 33
Size in memory of String is 99
Size in memory of Array is 33
Size in memory of h is 33
Size in memory of String sp is 33
Size in memory of Symbol s_at is 33
Size in memory of Array line is 33
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0xae80b8 parent 0xae8158 (Object_vt) size 4 tally 4
    0 key 0xae8338 (#lookup) value 0xae8608
    1 key 0xae8378 (#add_method) value 0xae8628
    2 key 0xae83c8 (#allocate) value 0xae8138
    3 key 0xae8458 (#delegate) value 0xae8118
obj Proto 0xae8678 vt Proto_vt 0xae80b8
vt Object_vt 0xae8158 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0xae8428 (#sizeInMemory) value 0xae86d8
obj Object 0xae8698 vt Object_vt 0xae8158
vt Symbol_vt 0xae81f8 parent 0xae8158 (Object_vt) size 4 tally 3
    0 key 0xae8488 (#new:) value 0xae86f8
    1 key 0xae8568 (#print) value 0xae8718
    2 key 0xae85a8 (#length) value 0xae8278
obj Symbol 0xae86b8 vt Symbol_vt 0xae81f8
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=33, Size of w=33 ,Size after append=33
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 33
Size in memory of Object is 33
Size in memory of Proto is 33
Size in memory of String is 99
Size in memory of Array is 65
Size in memory of h is 33
Size in memory of String sp is 33
Size in memory of Symbol s_at is 33
Size in memory of Array line is 33
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
*** Error in `./ovmhello': corrupted double-linked list: 0x00000000024c2080 ***
Aborted (core dumped)
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 49
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 49
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 49
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 49
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
vt Proto_vt 0x13680b8 parent 0x1368158 (Object_vt) size 4 tally 4
    0 key 0x1368338 (#lookup) value 0x1368608
    1 key 0x1368378 (#add_method) value 0x1368628
    2 key 0x13683c8 (#allocate) value 0x1368138
    3 key 0x1368458 (#delegate) value 0x1368118
obj Proto 0x1368678 vt Proto_vt 0x13680b8
vt Object_vt 0x1368158 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1368428 (#sizeInMemory) value 0x13686d8
obj Object 0x1368698 vt Object_vt 0x1368158
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
vt Symbol_vt 0x13681f8 parent 0x1368158 (Object_vt) size 4 tally 3
    0 key 0x1368488 (#new:) value 0x13686f8
    1 key 0x1368568 (#print) value 0x1368718
    2 key 0x13685a8 (#length) value 0x1368278
obj Symbol 0x13686b8 vt Symbol_vt 0x13681f8
Object Machine ready
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
Testing String
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
Object Machine v1.0
hello length 5
hello world
Testing Array
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
array elements 4
hello world

--Testing Append--
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=33, Size of w=33 ,Size after append=33
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
..............oop->_vt[-2]= 33
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 33
Size in memory of Object is 33
Size in memory of Proto is 33
Size in memory of String is 99
Size in memory of Array is 65
Size in memory of h is 33
Size in memory of String sp is 33
Size in memory of Symbol s_at is 33
Size in memory of Array line is 33
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜vt_allocateâ€™:
ovm.c:182:51: error: â€˜tâ€™ undeclared (first use in this function)
  (oop)->_vt[-2] = ((struct vtable *)((char *)0 + (t)));
                                                   ^
ovm.c:182:51: note: each undeclared identifier is reported only once for each function it appears in
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 65
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 49
..............oop->_vt[-2]= 33
..............oop->_vt[-2]= 49
*** Error in `./ovmhello': corrupted double-linked list: 0x00000000007ab080 ***
Aborted (core dumped)
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ valgrind ./ovmhello 
The program 'valgrind' is currently not installed. You can install it by typing:
sudo apt-get install valgrind
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ sudo apt-get install valgrind
Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 1%Reading package lists... 9%Reading package lists... 9%Reading package lists... 9%Reading package lists... 9%Reading package lists... 37%Reading package lists... 45%Reading package lists... 45%Reading package lists... 46%Reading package lists... 46%Reading package lists... 50%Reading package lists... 50%Reading package lists... 51%Reading package lists... 51%Reading package lists... 51%Reading package lists... 51%Reading package lists... 72%Reading package lists... 72%Reading package lists... 76%Reading package lists... 76%Reading package lists... 76%Reading package lists... 76%Reading package lists... 77%Reading package lists... 77%Reading package lists... 77%Reading package lists... 77%Reading package lists... 81%Reading package lists... 81%Reading package lists... 81%Reading package lists... 81%Reading package lists... 81%Reading package lists... 81%Reading package lists... 82%Reading package lists... 82%Reading package lists... 84%Reading package lists... 88%Reading package lists... 88%Reading package lists... 88%Reading package lists... 88%Reading package lists... 91%Reading package lists... 91%Reading package lists... 91%Reading package lists... 91%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 98%Reading package lists... 98%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
Suggested packages:
  valgrind-dbg kcachegrind alleyoop valkyrie
The following NEW packages will be installed:
  valgrind
0 upgraded, 1 newly installed, 0 to remove and 496 not upgraded.
Need to get 15.0 MB of archives.
After this operation, 102 MB of additional disk space will be used.
0% [Working]            Get:1 http://archive.ubuntu.com/ubuntu/ trusty-updates/main valgrind amd64 1:3.10.1-1ubuntu3~14.04 [15.0 MB]
            0% [1 valgrind 7,014 B/15.0 MB 0%]                                  1% [1 valgrind 102 kB/15.0 MB 1%]2% [1 valgrind 300 kB/15.0 MB 2%]3% [1 valgrind 493 kB/15.0 MB 3%]y5% [1 valgrind 686 kB/15.0 MB 5%]6% [1 valgrind 943 kB/15.0 MB 6%]                                 8% [1 valgrind 1,136 kB/15.0 MB 8%]9% [1 valgrind 1,378 kB/15.0 MB 9%]                                   11% [1 valgrind 1,585 kB/15.0 MB 11%]12% [1 valgrind 1,825 kB/15.0 MB 12%]14% [1 valgrind 2,035 kB/15.0 MB 14%]15% [1 valgrind 2,228 kB/15.0 MB 15%]                                     17% [1 valgrind 2,485 kB/15.0 MB 17%]                              389 kB/s 32s18% [1 valgrind 2,677 kB/15.0 MB 18%]                              389 kB/s 31s19% [1 valgrind 2,917 kB/15.0 MB 19%]                              389 kB/s 31s21% [1 valgrind 3,127 kB/15.0 MB 21%]                              389 kB/s 30s22% [1 valgrind 3,320 kB/15.0 MB 22%]                              389 kB/s 30s24% [1 valgrind 3,559 kB/15.0 MB 24%]                              389 kB/s 29s25% [1 valgrind 3,685 kB/15.0 MB 25%]                              389 kB/s 29s25% [1 valgrind 3,761 kB/15.0 MB 25%]                              389 kB/s 28s25% [1 valgrind 3,813 kB/15.0 MB 25%]                              389 kB/s 28s25% [1 valgrind 3,819 kB/15.0 MB 25%]                              389 kB/s 28s27% [1 valgrind 4,021 kB/15.0 MB 27%]                              389 kB/s 28s28% [1 valgrind 4,169 kB/15.0 MB 28%]                              389 kB/s 27s29% [1 valgrind 4,327 kB/15.0 MB 29%]                              307 kB/s 34s30% [1 valgrind 4,520 kB/15.0 MB 30%]                              307 kB/s 34s31% [1 valgrind 4,692 kB/15.0 MB 31%]                              307 kB/s 33s33% [1 valgrind 4,891 kB/15.0 MB 33%]                              307 kB/s 32s34% [1 valgrind 5,076 kB/15.0 MB 34%]                              307 kB/s 32s35% [1 valgrind 5,295 kB/15.0 MB 35%]                              307 kB/s 31s37% [1 valgrind 5,504 kB/15.0 MB 37%]                              307 kB/s 30s38% [1 valgrind 5,729 kB/15.0 MB 38%]                              307 kB/s 30s40% [1 valgrind 5,951 kB/15.0 MB 40%]                              307 kB/s 29s41% [1 valgrind 6,167 kB/15.0 MB 41%]                              307 kB/s 28s43% [1 valgrind 6,389 kB/15.0 MB 43%]                              307 kB/s 28s44% [1 valgrind 6,611 kB/15.0 MB 44%]                              307 kB/s 27s46% [1 valgrind 6,821 kB/15.0 MB 46%]                              415 kB/s 19s47% [1 valgrind 7,046 kB/15.0 MB 47%]                              415 kB/s 19s48% [1 valgrind 7,265 kB/15.0 MB 48%]                              415 kB/s 18s50% [1 valgrind 7,492 kB/15.0 MB 50%]                              415 kB/s 18s51% [1 valgrind 7,709 kB/15.0 MB 51%]                              415 kB/s 17s53% [1 valgrind 7,930 kB/15.0 MB 53%]                              415 kB/s 17s54% [1 valgrind 8,158 kB/15.0 MB 54%]                              415 kB/s 16s56% [1 valgrind 8,377 kB/15.0 MB 56%]                              415 kB/s 15s57% [1 valgrind 8,552 kB/15.0 MB 57%]                              415 kB/s 15s59% [1 valgrind 8,801 kB/15.0 MB 59%]                              415 kB/s 14s60% [1 valgrind 8,993 kB/15.0 MB 60%]                              415 kB/s 14s61% [1 valgrind 9,203 kB/15.0 MB 61%]                              415 kB/s 13s62% [1 valgrind 9,338 kB/15.0 MB 62%]                              419 kB/s 13s64% [1 valgrind 9,557 kB/15.0 MB 64%]                              419 kB/s 12s65% [1 valgrind 9,788 kB/15.0 MB 65%]                              419 kB/s 12s67% [1 valgrind 9,980 kB/15.0 MB 67%]                              419 kB/s 11s68% [1 valgrind 10.2 MB/15.0 MB 68%]                               419 kB/s 11s69% [1 valgrind 10.3 MB/15.0 MB 69%]                               419 kB/s 11s70% [1 valgrind 10.6 MB/15.0 MB 70%]                               419 kB/s 10s71% [1 valgrind 10.7 MB/15.0 MB 71%]                               419 kB/s 10s72% [1 valgrind 10.8 MB/15.0 MB 72%]                                419 kB/s 9s73% [1 valgrind 11.0 MB/15.0 MB 73%]                                419 kB/s 9s74% [1 valgrind 11.2 MB/15.0 MB 74%]                                419 kB/s 9s76% [1 valgrind 11.4 MB/15.0 MB 76%]                                419 kB/s 8s77% [1 valgrind 11.6 MB/15.0 MB 77%]                                376 kB/s 9s79% [1 valgrind 11.8 MB/15.0 MB 79%]                                376 kB/s 8s80% [1 valgrind 12.0 MB/15.0 MB 80%]                                376 kB/s 7s82% [1 valgrind 12.2 MB/15.0 MB 82%]                                376 kB/s 7s83% [1 valgrind 12.5 MB/15.0 MB 83%]                                376 kB/s 6s85% [1 valgrind 12.7 MB/15.0 MB 85%]                                376 kB/s 6s86% [1 valgrind 12.9 MB/15.0 MB 86%]                                376 kB/s 5s88% [1 valgrind 13.1 MB/15.0 MB 88%]                                376 kB/s 4s89% [1 valgrind 13.3 MB/15.0 MB 89%]                                376 kB/s 4s91% [1 valgrind 13.6 MB/15.0 MB 91%]                                376 kB/s 3s92% [1 valgrind 13.8 MB/15.0 MB 92%]                                376 kB/s 3s94% [1 valgrind 14.0 MB/15.0 MB 94%]                                376 kB/s 2s95% [1 valgrind 14.2 MB/15.0 MB 95%]                                438 kB/s 1s96% [1 valgrind 14.4 MB/15.0 MB 96%]                                438 kB/s 1s98% [1 valgrind 14.6 MB/15.0 MB 98%]                                438 kB/s 0s99% [1 valgrind 14.9 MB/15.0 MB 99%]                                438 kB/s 0s100% [Working]                                                      438 kB/s 0s                                                                               Fetched 15.0 MB in 38s (392 kB/s)
Selecting previously unselected package valgrind.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 170172 files and directories currently installed.)
Preparing to unpack .../valgrind_1%3a3.10.1-1ubuntu3~14.04_amd64.deb ...
Unpacking valgrind (1:3.10.1-1ubuntu3~14.04) ...
Processing triggers for doc-base (0.10.5) ...
Processing 35 changed doc-base files, 1 added doc-base file...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
Setting up valgrind (1:3.10.1-1ubuntu3~14.04) ...
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ sudo apt-get install valgrind[9Pvalgrind ./ovmhello 
==7923== Memcheck, a memory error detector
==7923== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==7923== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==7923== Command: ./ovmhello
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x40120D: init_ovm (ovm.c:334)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd038 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x40120D: init_ovm (ovm.c:334)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x40120D: init_ovm (ovm.c:334)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd038 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x40120D: init_ovm (ovm.c:334)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401228: init_ovm (ovm.c:337)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd198 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401228: init_ovm (ovm.c:337)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401228: init_ovm (ovm.c:337)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd198 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401228: init_ovm (ovm.c:337)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401255: init_ovm (ovm.c:340)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd2f8 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401255: init_ovm (ovm.c:340)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401255: init_ovm (ovm.c:340)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd2f8 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401255: init_ovm (ovm.c:340)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401299: init_ovm (ovm.c:346)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd458 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401299: init_ovm (ovm.c:346)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401299: init_ovm (ovm.c:346)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd458 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401299: init_ovm (ovm.c:346)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x4012B9: init_ovm (ovm.c:347)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd5b8 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x4012B9: init_ovm (ovm.c:347)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x4012B9: init_ovm (ovm.c:347)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd5b8 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x4012B9: init_ovm (ovm.c:347)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012CA: init_ovm (ovm.c:349)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd718 is 8 bytes before a block of size 23 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012CA: init_ovm (ovm.c:349)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012CA: init_ovm (ovm.c:349)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd718 is 8 bytes before a block of size 23 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012CA: init_ovm (ovm.c:349)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40111D: atom (ovm.c:297)
==7923==    by 0x4012CA: init_ovm (ovm.c:349)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd778 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40111D: atom (ovm.c:297)
==7923==    by 0x4012CA: init_ovm (ovm.c:349)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40111D: atom (ovm.c:297)
==7923==    by 0x4012CA: init_ovm (ovm.c:349)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd778 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40111D: atom (ovm.c:297)
==7923==    by 0x4012CA: init_ovm (ovm.c:349)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012DB: init_ovm (ovm.c:350)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd7d8 is 8 bytes before a block of size 27 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012DB: init_ovm (ovm.c:350)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012DB: init_ovm (ovm.c:350)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd7d8 is 8 bytes before a block of size 27 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012DB: init_ovm (ovm.c:350)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012EC: init_ovm (ovm.c:351)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd898 is 8 bytes before a block of size 25 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012EC: init_ovm (ovm.c:351)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012EC: init_ovm (ovm.c:351)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fd898 is 8 bytes before a block of size 25 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012EC: init_ovm (ovm.c:351)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012FD: init_ovm (ovm.c:352)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fda18 is 8 bytes before a block of size 25 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012FD: init_ovm (ovm.c:352)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012FD: init_ovm (ovm.c:352)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fda18 is 8 bytes before a block of size 25 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x4012FD: init_ovm (ovm.c:352)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x40130E: init_ovm (ovm.c:353)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fdad8 is 8 bytes before a block of size 21 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x40130E: init_ovm (ovm.c:353)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x40130E: init_ovm (ovm.c:353)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fdad8 is 8 bytes before a block of size 21 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x40130E: init_ovm (ovm.c:353)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x40131F: init_ovm (ovm.c:354)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fdc98 is 8 bytes before a block of size 22 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x40131F: init_ovm (ovm.c:354)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x40131F: init_ovm (ovm.c:354)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fdc98 is 8 bytes before a block of size 22 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x40131F: init_ovm (ovm.c:354)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401330: init_ovm (ovm.c:355)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fdd58 is 8 bytes before a block of size 23 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401330: init_ovm (ovm.c:355)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401330: init_ovm (ovm.c:355)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fdd58 is 8 bytes before a block of size 23 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401330: init_ovm (ovm.c:355)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401341: init_ovm (ovm.c:356)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fde18 is 8 bytes before a block of size 29 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401341: init_ovm (ovm.c:356)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401341: init_ovm (ovm.c:356)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fde18 is 8 bytes before a block of size 29 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401341: init_ovm (ovm.c:356)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401368: init_ovm (ovm.c:358)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fded8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401368: init_ovm (ovm.c:358)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401368: init_ovm (ovm.c:358)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fded8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401368: init_ovm (ovm.c:358)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401388: init_ovm (ovm.c:359)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fdf38 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401388: init_ovm (ovm.c:359)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401388: init_ovm (ovm.c:359)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fdf38 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401388: init_ovm (ovm.c:359)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4013DA: init_ovm (ovm.c:360)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe058 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4013DA: init_ovm (ovm.c:360)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4013DA: init_ovm (ovm.c:360)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe058 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4013DA: init_ovm (ovm.c:360)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40142C: init_ovm (ovm.c:361)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe0b8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40142C: init_ovm (ovm.c:361)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40142C: init_ovm (ovm.c:361)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe0b8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40142C: init_ovm (ovm.c:361)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401445: init_ovm (ovm.c:363)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe118 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401445: init_ovm (ovm.c:363)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401445: init_ovm (ovm.c:363)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe118 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401445: init_ovm (ovm.c:363)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401465: init_ovm (ovm.c:364)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe168 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401465: init_ovm (ovm.c:364)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401465: init_ovm (ovm.c:364)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe168 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401465: init_ovm (ovm.c:364)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401485: init_ovm (ovm.c:365)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe1b8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401485: init_ovm (ovm.c:365)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401485: init_ovm (ovm.c:365)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe1b8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401485: init_ovm (ovm.c:365)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401572: init_ovm (ovm.c:371)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe208 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401572: init_ovm (ovm.c:371)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401572: init_ovm (ovm.c:371)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe208 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401572: init_ovm (ovm.c:371)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
vt Proto_vt 0x51fd1a8 parent 0x51fd308 (Object_vt) size 4 tally 4
    0 key 0x51fd728 (#lookup) value 0x51fdee8
    1 key 0x51fd7e8 (#add_method) value 0x51fdf48
    2 key 0x51fd8a8 (#allocate) value 0x51fe068
    3 key 0x51fda28 (#delegate) value 0x51fe0c8
obj Proto 0x51fe128 vt Proto_vt 0x51fd1a8
vt Object_vt 0x51fd308 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x51fde28 (#sizeInMemory) value 0x51fe218
obj Object 0x51fe178 vt Object_vt 0x51fd308
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40160E: init_ovm (ovm.c:376)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe268 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40160E: init_ovm (ovm.c:376)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40160E: init_ovm (ovm.c:376)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe268 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40160E: init_ovm (ovm.c:376)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401664: init_ovm (ovm.c:377)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe2c8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401664: init_ovm (ovm.c:377)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401664: init_ovm (ovm.c:377)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe2c8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401664: init_ovm (ovm.c:377)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4016BA: init_ovm (ovm.c:378)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe3e8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4016BA: init_ovm (ovm.c:378)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4016BA: init_ovm (ovm.c:378)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923==  Address 0x51fe3e8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4016BA: init_ovm (ovm.c:378)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
vt Symbol_vt 0x51fd468 parent 0x51fd308 (Object_vt) size 4 tally 3
    0 key 0x51fdae8 (#new:) value 0x51fe278
    1 key 0x51fdca8 (#print) value 0x51fe2d8
    2 key 0x51fdd68 (#length) value 0x51fe3f8
obj Symbol 0x51fe1c8 vt Symbol_vt 0x51fd468
Object Machine ready
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401168: symbol_newp (ovm.c:305)
==7923==    by 0x401AEF: main (ovmhello.c:96)
==7923==  Address 0x51fe448 is 8 bytes before a block of size 20 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401168: symbol_newp (ovm.c:305)
==7923==    by 0x401AEF: main (ovmhello.c:96)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401168: symbol_newp (ovm.c:305)
==7923==    by 0x401AEF: main (ovmhello.c:96)
==7923==  Address 0x51fe448 is 8 bytes before a block of size 20 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401168: symbol_newp (ovm.c:305)
==7923==    by 0x401AEF: main (ovmhello.c:96)
==7923== 
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
Testing String
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401C40: main (ovmhello.c:101)
==7923==  Address 0x51fe808 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401C40: main (ovmhello.c:101)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401C40: main (ovmhello.c:101)
==7923==  Address 0x51fe808 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x401C40: main (ovmhello.c:101)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401D52: main (ovmhello.c:106)
==7923==  Address 0x51fe9b8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401D52: main (ovmhello.c:106)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401D52: main (ovmhello.c:106)
==7923==  Address 0x51fe9b8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401D52: main (ovmhello.c:106)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401DB9: main (ovmhello.c:107)
==7923==  Address 0x51fea18 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401DB9: main (ovmhello.c:107)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401DB9: main (ovmhello.c:107)
==7923==  Address 0x51fea18 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401DB9: main (ovmhello.c:107)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401E20: main (ovmhello.c:108)
==7923==  Address 0x51feb38 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401E20: main (ovmhello.c:108)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401E20: main (ovmhello.c:108)
==7923==  Address 0x51feb38 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401E20: main (ovmhello.c:108)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401E87: main (ovmhello.c:109)
==7923==  Address 0x51feb98 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401E87: main (ovmhello.c:109)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401E87: main (ovmhello.c:109)
==7923==  Address 0x51feb98 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x401E87: main (ovmhello.c:109)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401EE6: main (ovmhello.c:111)
==7923==  Address 0x51febf8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401EE6: main (ovmhello.c:111)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401EE6: main (ovmhello.c:111)
==7923==  Address 0x51febf8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401EE6: main (ovmhello.c:111)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x401784: String_newp (ovmhello.c:17)
==7923==    by 0x401EE6: main (ovmhello.c:111)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid write of size 8
==7923==    at 0x4017A2: String_newp (ovmhello.c:18)
==7923==    by 0x401EE6: main (ovmhello.c:111)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401F53: main (ovmhello.c:112)
==7923==  Address 0x51fecb8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401F53: main (ovmhello.c:112)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401F53: main (ovmhello.c:112)
==7923==  Address 0x51fecb8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401F53: main (ovmhello.c:112)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x401784: String_newp (ovmhello.c:17)
==7923==    by 0x401F53: main (ovmhello.c:112)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid write of size 8
==7923==    at 0x4017A2: String_newp (ovmhello.c:18)
==7923==    by 0x401F53: main (ovmhello.c:112)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401FC0: main (ovmhello.c:113)
==7923==  Address 0x51fed68 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401FC0: main (ovmhello.c:113)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401FC0: main (ovmhello.c:113)
==7923==  Address 0x51fed68 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401FC0: main (ovmhello.c:113)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x401784: String_newp (ovmhello.c:17)
==7923==    by 0x401FC0: main (ovmhello.c:113)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid write of size 8
==7923==    at 0x4017A2: String_newp (ovmhello.c:18)
==7923==    by 0x401FC0: main (ovmhello.c:113)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40202D: main (ovmhello.c:114)
==7923==  Address 0x51fee18 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40202D: main (ovmhello.c:114)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40202D: main (ovmhello.c:114)
==7923==  Address 0x51fee18 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40202D: main (ovmhello.c:114)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x401784: String_newp (ovmhello.c:17)
==7923==    by 0x40202D: main (ovmhello.c:114)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid write of size 8
==7923==    at 0x4017A2: String_newp (ovmhello.c:18)
==7923==    by 0x40202D: main (ovmhello.c:114)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40209A: main (ovmhello.c:115)
==7923==  Address 0x51feec8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40209A: main (ovmhello.c:115)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40209A: main (ovmhello.c:115)
==7923==  Address 0x51feec8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40209A: main (ovmhello.c:115)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x401784: String_newp (ovmhello.c:17)
==7923==    by 0x40209A: main (ovmhello.c:115)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid write of size 8
==7923==    at 0x4017A2: String_newp (ovmhello.c:18)
==7923==    by 0x40209A: main (ovmhello.c:115)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
Object Machine v1.0
hello length 5
hello world
Testing Array
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x402357: main (ovmhello.c:126)
==7923==  Address 0x51fef78 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x402357: main (ovmhello.c:126)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x402357: main (ovmhello.c:126)
==7923==  Address 0x51fef78 is 8 bytes before a block of size 48 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400B75: vt_delegate (ovm.c:188)
==7923==    by 0x402357: main (ovmhello.c:126)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x4023C4: main (ovmhello.c:127)
==7923==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x4023C4: main (ovmhello.c:127)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x4023C4: main (ovmhello.c:127)
==7923==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x4023C4: main (ovmhello.c:127)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x402469: main (ovmhello.c:131)
==7923==  Address 0x51ff128 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x402469: main (ovmhello.c:131)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x402469: main (ovmhello.c:131)
==7923==  Address 0x51ff128 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x402469: main (ovmhello.c:131)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4024D0: main (ovmhello.c:132)
==7923==  Address 0x51ff188 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4024D0: main (ovmhello.c:132)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4024D0: main (ovmhello.c:132)
==7923==  Address 0x51ff188 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x4024D0: main (ovmhello.c:132)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x402537: main (ovmhello.c:133)
==7923==  Address 0x51ff2a8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x402537: main (ovmhello.c:133)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x402537: main (ovmhello.c:133)
==7923==  Address 0x51ff2a8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x402537: main (ovmhello.c:133)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40259E: main (ovmhello.c:134)
==7923==  Address 0x51ff308 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40259E: main (ovmhello.c:134)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40259E: main (ovmhello.c:134)
==7923==  Address 0x51ff308 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x400E98: cls_alloc (ovm.c:246)
==7923==    by 0x401007: vt_add_method (ovm.c:269)
==7923==    by 0x40259E: main (ovmhello.c:134)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x400B13: vt_allocate (ovm.c:181)
==7923==    by 0x401939: Array_newp (ovmhello.c:58)
==7923==    by 0x4025FD: main (ovmhello.c:136)
==7923==  Address 0x51ff368 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401939: Array_newp (ovmhello.c:58)
==7923==    by 0x4025FD: main (ovmhello.c:136)
==7923== 
..............oop->_vt[-2]= 0
==7923== Invalid write of size 8
==7923==    at 0x400B30: vt_allocate (ovm.c:182)
==7923==    by 0x401939: Array_newp (ovmhello.c:58)
==7923==    by 0x4025FD: main (ovmhello.c:136)
==7923==  Address 0x51ff368 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401939: Array_newp (ovmhello.c:58)
==7923==    by 0x4025FD: main (ovmhello.c:136)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x40199A: Array_newp (ovmhello.c:63)
==7923==    by 0x4025FD: main (ovmhello.c:136)
==7923==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x4023C4: main (ovmhello.c:127)
==7923== 
==7923== Invalid write of size 8
==7923==    at 0x4019BD: Array_newp (ovmhello.c:64)
==7923==    by 0x4025FD: main (ovmhello.c:136)
==7923==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x4023C4: main (ovmhello.c:127)
==7923== 
array elements 4
hello world

--Testing Append--
==7923== 
==7923== More than 100 errors detected.  Subsequent errors
==7923== will still be recorded, but in less detail than before.
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x401784: String_newp (ovmhello.c:17)
==7923==    by 0x4018BE: String_append (ovmhello.c:42)
==7923==    by 0x402985: main (ovmhello.c:150)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid write of size 8
==7923==    at 0x4017A2: String_newp (ovmhello.c:18)
==7923==    by 0x4018BE: String_append (ovmhello.c:42)
==7923==    by 0x402985: main (ovmhello.c:150)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x402D26: main (ovmhello.c:168)
==7923==  Address 0x51fecb8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401F53: main (ovmhello.c:112)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x402D90: main (ovmhello.c:169)
==7923==  Address 0x51fee18 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x40202D: main (ovmhello.c:114)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x402DFA: main (ovmhello.c:170)
==7923==  Address 0x51ff778 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x4018BE: String_append (ovmhello.c:42)
==7923==    by 0x402AEA: main (ovmhello.c:153)
==7923== 
Size of h=16, Size of w=16 ,Size after append=16
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
..............oop->_vt[-2]= 0
==7923== Invalid read of size 8
==7923==    at 0x401784: String_newp (ovmhello.c:17)
==7923==    by 0x402EB5: main (ovmhello.c:181)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid write of size 8
==7923==    at 0x4017A2: String_newp (ovmhello.c:18)
==7923==    by 0x402EB5: main (ovmhello.c:181)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x402F20: main (ovmhello.c:182)
==7923==  Address 0x51ff828 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x402EB5: main (ovmhello.c:181)
==7923== 
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x402FC1: main (ovmhello.c:188)
==7923==  Address 0x51fe1b8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401485: init_ovm (ovm.c:365)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x4011E4: object_sizeInMemory (ovm.c:326)
==7923==    by 0x402FC1: main (ovmhello.c:188)
==7923==  Address 0x51fe1b8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401485: init_ovm (ovm.c:365)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
Size in memory of Symbol is 0
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x40302D: main (ovmhello.c:190)
==7923==  Address 0x51fe168 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401465: init_ovm (ovm.c:364)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x4011E4: object_sizeInMemory (ovm.c:326)
==7923==    by 0x40302D: main (ovmhello.c:190)
==7923==  Address 0x51fe168 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401465: init_ovm (ovm.c:364)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
Size in memory of Object is 0
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x403099: main (ovmhello.c:192)
==7923==  Address 0x51fe118 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401445: init_ovm (ovm.c:363)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
==7923== Invalid read of size 8
==7923==    at 0x4011E4: object_sizeInMemory (ovm.c:326)
==7923==    by 0x403099: main (ovmhello.c:192)
==7923==  Address 0x51fe118 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401445: init_ovm (ovm.c:363)
==7923==    by 0x401A90: main (ovmhello.c:94)
==7923== 
Size in memory of Proto is 0
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x403105: main (ovmhello.c:194)
==7923==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401CAD: main (ovmhello.c:102)
==7923== 
Size in memory of String is 66
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x403171: main (ovmhello.c:196)
==7923==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x4023C4: main (ovmhello.c:127)
==7923== 
Size in memory of Array is 32
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x4031DD: main (ovmhello.c:198)
==7923==  Address 0x51fecb8 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401F53: main (ovmhello.c:112)
==7923== 
Size in memory of h is 16
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x403249: main (ovmhello.c:200)
==7923==  Address 0x51fed68 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401748: String_newp (ovmhello.c:13)
==7923==    by 0x401FC0: main (ovmhello.c:113)
==7923== 
Size in memory of String sp is 16
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x4032B5: main (ovmhello.c:202)
==7923==  Address 0x51fe448 is 8 bytes before a block of size 20 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401051: sym_alloc (ovm.c:279)
==7923==    by 0x4010FC: atom (ovm.c:296)
==7923==    by 0x401168: symbol_newp (ovm.c:305)
==7923==    by 0x401AEF: main (ovmhello.c:96)
==7923== 
Size in memory of Symbol s_at is 12
==7923== Invalid read of size 8
==7923==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7923==    by 0x403321: main (ovmhello.c:204)
==7923==  Address 0x51ff368 is 8 bytes before a block of size 24 alloc'd
==7923==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7923==    by 0x400AF2: vt_allocate (ovm.c:178)
==7923==    by 0x401939: Array_newp (ovmhello.c:58)
==7923==    by 0x4025FD: main (ovmhello.c:136)
==7923== 
Size in memory of Array line is 16
sizeof(struct symbol)= 8
==7923== 
==7923== HEAP SUMMARY:
==7923==     in use at exit: 2,281 bytes in 93 blocks
==7923==   total heap usage: 111 allocs, 18 frees, 2,671 bytes allocated
==7923== 
==7923== LEAK SUMMARY:
==7923==    definitely lost: 208 bytes in 12 blocks
==7923==    indirectly lost: 204 bytes in 15 blocks
==7923==      possibly lost: 1,869 bytes in 66 blocks
==7923==    still reachable: 0 bytes in 0 blocks
==7923==         suppressed: 0 bytes in 0 blocks
==7923== Rerun with --leak-check=full to see details of leaked memory
==7923== 
==7923== For counts of detected and suppressed errors, rerun with: -v
==7923== ERROR SUMMARY: 160 errors from 120 contexts (suppressed: 0 from 0)
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ clear
[H[2J]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ clearvalgrind ./ovmhello 
==7935== Memcheck, a memory error detector
==7935== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==7935== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==7935== Command: ./ovmhello
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x40120D: init_ovm (ovm.c:334)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd038 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x40120D: init_ovm (ovm.c:334)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x40120D: init_ovm (ovm.c:334)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd038 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x40120D: init_ovm (ovm.c:334)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401228: init_ovm (ovm.c:337)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd198 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401228: init_ovm (ovm.c:337)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401228: init_ovm (ovm.c:337)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd198 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401228: init_ovm (ovm.c:337)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401255: init_ovm (ovm.c:340)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd2f8 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401255: init_ovm (ovm.c:340)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401255: init_ovm (ovm.c:340)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd2f8 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401255: init_ovm (ovm.c:340)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401299: init_ovm (ovm.c:346)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd458 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401299: init_ovm (ovm.c:346)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401299: init_ovm (ovm.c:346)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd458 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401299: init_ovm (ovm.c:346)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x4012B9: init_ovm (ovm.c:347)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd5b8 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x4012B9: init_ovm (ovm.c:347)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x4012B9: init_ovm (ovm.c:347)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd5b8 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x4012B9: init_ovm (ovm.c:347)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012CA: init_ovm (ovm.c:349)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd718 is 8 bytes before a block of size 23 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012CA: init_ovm (ovm.c:349)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012CA: init_ovm (ovm.c:349)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd718 is 8 bytes before a block of size 23 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012CA: init_ovm (ovm.c:349)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40111D: atom (ovm.c:297)
==7935==    by 0x4012CA: init_ovm (ovm.c:349)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd778 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40111D: atom (ovm.c:297)
==7935==    by 0x4012CA: init_ovm (ovm.c:349)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40111D: atom (ovm.c:297)
==7935==    by 0x4012CA: init_ovm (ovm.c:349)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd778 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40111D: atom (ovm.c:297)
==7935==    by 0x4012CA: init_ovm (ovm.c:349)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012DB: init_ovm (ovm.c:350)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd7d8 is 8 bytes before a block of size 27 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012DB: init_ovm (ovm.c:350)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012DB: init_ovm (ovm.c:350)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd7d8 is 8 bytes before a block of size 27 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012DB: init_ovm (ovm.c:350)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012EC: init_ovm (ovm.c:351)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd898 is 8 bytes before a block of size 25 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012EC: init_ovm (ovm.c:351)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012EC: init_ovm (ovm.c:351)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fd898 is 8 bytes before a block of size 25 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012EC: init_ovm (ovm.c:351)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012FD: init_ovm (ovm.c:352)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fda18 is 8 bytes before a block of size 25 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012FD: init_ovm (ovm.c:352)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012FD: init_ovm (ovm.c:352)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fda18 is 8 bytes before a block of size 25 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x4012FD: init_ovm (ovm.c:352)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x40130E: init_ovm (ovm.c:353)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fdad8 is 8 bytes before a block of size 21 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x40130E: init_ovm (ovm.c:353)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x40130E: init_ovm (ovm.c:353)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fdad8 is 8 bytes before a block of size 21 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x40130E: init_ovm (ovm.c:353)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x40131F: init_ovm (ovm.c:354)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fdc98 is 8 bytes before a block of size 22 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x40131F: init_ovm (ovm.c:354)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x40131F: init_ovm (ovm.c:354)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fdc98 is 8 bytes before a block of size 22 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x40131F: init_ovm (ovm.c:354)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401330: init_ovm (ovm.c:355)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fdd58 is 8 bytes before a block of size 23 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401330: init_ovm (ovm.c:355)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401330: init_ovm (ovm.c:355)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fdd58 is 8 bytes before a block of size 23 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401330: init_ovm (ovm.c:355)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401341: init_ovm (ovm.c:356)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fde18 is 8 bytes before a block of size 29 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401341: init_ovm (ovm.c:356)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401341: init_ovm (ovm.c:356)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fde18 is 8 bytes before a block of size 29 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401341: init_ovm (ovm.c:356)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401368: init_ovm (ovm.c:358)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fded8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401368: init_ovm (ovm.c:358)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401368: init_ovm (ovm.c:358)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fded8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401368: init_ovm (ovm.c:358)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401388: init_ovm (ovm.c:359)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fdf38 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401388: init_ovm (ovm.c:359)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401388: init_ovm (ovm.c:359)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fdf38 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401388: init_ovm (ovm.c:359)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4013DA: init_ovm (ovm.c:360)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe058 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4013DA: init_ovm (ovm.c:360)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4013DA: init_ovm (ovm.c:360)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe058 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4013DA: init_ovm (ovm.c:360)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40142C: init_ovm (ovm.c:361)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe0b8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40142C: init_ovm (ovm.c:361)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40142C: init_ovm (ovm.c:361)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe0b8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40142C: init_ovm (ovm.c:361)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401445: init_ovm (ovm.c:363)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe118 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401445: init_ovm (ovm.c:363)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401445: init_ovm (ovm.c:363)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe118 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401445: init_ovm (ovm.c:363)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401465: init_ovm (ovm.c:364)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe168 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401465: init_ovm (ovm.c:364)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401465: init_ovm (ovm.c:364)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe168 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401465: init_ovm (ovm.c:364)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401485: init_ovm (ovm.c:365)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe1b8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401485: init_ovm (ovm.c:365)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401485: init_ovm (ovm.c:365)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe1b8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401485: init_ovm (ovm.c:365)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401572: init_ovm (ovm.c:371)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe208 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401572: init_ovm (ovm.c:371)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401572: init_ovm (ovm.c:371)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe208 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401572: init_ovm (ovm.c:371)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
vt Proto_vt 0x51fd1a8 parent 0x51fd308 (Object_vt) size 4 tally 4
    0 key 0x51fd728 (#lookup) value 0x51fdee8
    1 key 0x51fd7e8 (#add_method) value 0x51fdf48
    2 key 0x51fd8a8 (#allocate) value 0x51fe068
    3 key 0x51fda28 (#delegate) value 0x51fe0c8
obj Proto 0x51fe128 vt Proto_vt 0x51fd1a8
vt Object_vt 0x51fd308 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x51fde28 (#sizeInMemory) value 0x51fe218
obj Object 0x51fe178 vt Object_vt 0x51fd308
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40160E: init_ovm (ovm.c:376)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe268 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40160E: init_ovm (ovm.c:376)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40160E: init_ovm (ovm.c:376)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe268 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40160E: init_ovm (ovm.c:376)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401664: init_ovm (ovm.c:377)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe2c8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401664: init_ovm (ovm.c:377)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401664: init_ovm (ovm.c:377)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe2c8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401664: init_ovm (ovm.c:377)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4016BA: init_ovm (ovm.c:378)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe3e8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4016BA: init_ovm (ovm.c:378)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4016BA: init_ovm (ovm.c:378)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935==  Address 0x51fe3e8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4016BA: init_ovm (ovm.c:378)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
vt Symbol_vt 0x51fd468 parent 0x51fd308 (Object_vt) size 4 tally 3
    0 key 0x51fdae8 (#new:) value 0x51fe278
    1 key 0x51fdca8 (#print) value 0x51fe2d8
    2 key 0x51fdd68 (#length) value 0x51fe3f8
obj Symbol 0x51fe1c8 vt Symbol_vt 0x51fd468
Object Machine ready
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401168: symbol_newp (ovm.c:305)
==7935==    by 0x401AEF: main (ovmhello.c:96)
==7935==  Address 0x51fe448 is 8 bytes before a block of size 20 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401168: symbol_newp (ovm.c:305)
==7935==    by 0x401AEF: main (ovmhello.c:96)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401168: symbol_newp (ovm.c:305)
==7935==    by 0x401AEF: main (ovmhello.c:96)
==7935==  Address 0x51fe448 is 8 bytes before a block of size 20 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401168: symbol_newp (ovm.c:305)
==7935==    by 0x401AEF: main (ovmhello.c:96)
==7935== 
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
Testing String
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401C40: main (ovmhello.c:101)
==7935==  Address 0x51fe808 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401C40: main (ovmhello.c:101)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401C40: main (ovmhello.c:101)
==7935==  Address 0x51fe808 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x401C40: main (ovmhello.c:101)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401D52: main (ovmhello.c:106)
==7935==  Address 0x51fe9b8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401D52: main (ovmhello.c:106)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401D52: main (ovmhello.c:106)
==7935==  Address 0x51fe9b8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401D52: main (ovmhello.c:106)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401DB9: main (ovmhello.c:107)
==7935==  Address 0x51fea18 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401DB9: main (ovmhello.c:107)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401DB9: main (ovmhello.c:107)
==7935==  Address 0x51fea18 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401DB9: main (ovmhello.c:107)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401E20: main (ovmhello.c:108)
==7935==  Address 0x51feb38 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401E20: main (ovmhello.c:108)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401E20: main (ovmhello.c:108)
==7935==  Address 0x51feb38 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401E20: main (ovmhello.c:108)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401E87: main (ovmhello.c:109)
==7935==  Address 0x51feb98 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401E87: main (ovmhello.c:109)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401E87: main (ovmhello.c:109)
==7935==  Address 0x51feb98 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x401E87: main (ovmhello.c:109)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401EE6: main (ovmhello.c:111)
==7935==  Address 0x51febf8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401EE6: main (ovmhello.c:111)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401EE6: main (ovmhello.c:111)
==7935==  Address 0x51febf8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401EE6: main (ovmhello.c:111)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x401784: String_newp (ovmhello.c:17)
==7935==    by 0x401EE6: main (ovmhello.c:111)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid write of size 8
==7935==    at 0x4017A2: String_newp (ovmhello.c:18)
==7935==    by 0x401EE6: main (ovmhello.c:111)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401F53: main (ovmhello.c:112)
==7935==  Address 0x51fecb8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401F53: main (ovmhello.c:112)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401F53: main (ovmhello.c:112)
==7935==  Address 0x51fecb8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401F53: main (ovmhello.c:112)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x401784: String_newp (ovmhello.c:17)
==7935==    by 0x401F53: main (ovmhello.c:112)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid write of size 8
==7935==    at 0x4017A2: String_newp (ovmhello.c:18)
==7935==    by 0x401F53: main (ovmhello.c:112)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401FC0: main (ovmhello.c:113)
==7935==  Address 0x51fed68 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401FC0: main (ovmhello.c:113)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401FC0: main (ovmhello.c:113)
==7935==  Address 0x51fed68 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401FC0: main (ovmhello.c:113)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x401784: String_newp (ovmhello.c:17)
==7935==    by 0x401FC0: main (ovmhello.c:113)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid write of size 8
==7935==    at 0x4017A2: String_newp (ovmhello.c:18)
==7935==    by 0x401FC0: main (ovmhello.c:113)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40202D: main (ovmhello.c:114)
==7935==  Address 0x51fee18 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40202D: main (ovmhello.c:114)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40202D: main (ovmhello.c:114)
==7935==  Address 0x51fee18 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40202D: main (ovmhello.c:114)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x401784: String_newp (ovmhello.c:17)
==7935==    by 0x40202D: main (ovmhello.c:114)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid write of size 8
==7935==    at 0x4017A2: String_newp (ovmhello.c:18)
==7935==    by 0x40202D: main (ovmhello.c:114)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40209A: main (ovmhello.c:115)
==7935==  Address 0x51feec8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40209A: main (ovmhello.c:115)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40209A: main (ovmhello.c:115)
==7935==  Address 0x51feec8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40209A: main (ovmhello.c:115)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x401784: String_newp (ovmhello.c:17)
==7935==    by 0x40209A: main (ovmhello.c:115)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid write of size 8
==7935==    at 0x4017A2: String_newp (ovmhello.c:18)
==7935==    by 0x40209A: main (ovmhello.c:115)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
Object Machine v1.0
hello length 5
hello world
Testing Array
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x402357: main (ovmhello.c:126)
==7935==  Address 0x51fef78 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x402357: main (ovmhello.c:126)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x402357: main (ovmhello.c:126)
==7935==  Address 0x51fef78 is 8 bytes before a block of size 48 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400B75: vt_delegate (ovm.c:188)
==7935==    by 0x402357: main (ovmhello.c:126)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x4023C4: main (ovmhello.c:127)
==7935==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x4023C4: main (ovmhello.c:127)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x4023C4: main (ovmhello.c:127)
==7935==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x4023C4: main (ovmhello.c:127)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x402469: main (ovmhello.c:131)
==7935==  Address 0x51ff128 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x402469: main (ovmhello.c:131)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x402469: main (ovmhello.c:131)
==7935==  Address 0x51ff128 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x402469: main (ovmhello.c:131)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4024D0: main (ovmhello.c:132)
==7935==  Address 0x51ff188 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4024D0: main (ovmhello.c:132)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4024D0: main (ovmhello.c:132)
==7935==  Address 0x51ff188 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x4024D0: main (ovmhello.c:132)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x402537: main (ovmhello.c:133)
==7935==  Address 0x51ff2a8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x402537: main (ovmhello.c:133)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x402537: main (ovmhello.c:133)
==7935==  Address 0x51ff2a8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x402537: main (ovmhello.c:133)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40259E: main (ovmhello.c:134)
==7935==  Address 0x51ff308 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40259E: main (ovmhello.c:134)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40259E: main (ovmhello.c:134)
==7935==  Address 0x51ff308 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x400E98: cls_alloc (ovm.c:246)
==7935==    by 0x401007: vt_add_method (ovm.c:269)
==7935==    by 0x40259E: main (ovmhello.c:134)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x400B13: vt_allocate (ovm.c:181)
==7935==    by 0x401939: Array_newp (ovmhello.c:58)
==7935==    by 0x4025FD: main (ovmhello.c:136)
==7935==  Address 0x51ff368 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401939: Array_newp (ovmhello.c:58)
==7935==    by 0x4025FD: main (ovmhello.c:136)
==7935== 
..............oop->_vt[-2]= 0
==7935== Invalid write of size 8
==7935==    at 0x400B30: vt_allocate (ovm.c:182)
==7935==    by 0x401939: Array_newp (ovmhello.c:58)
==7935==    by 0x4025FD: main (ovmhello.c:136)
==7935==  Address 0x51ff368 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401939: Array_newp (ovmhello.c:58)
==7935==    by 0x4025FD: main (ovmhello.c:136)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x40199A: Array_newp (ovmhello.c:63)
==7935==    by 0x4025FD: main (ovmhello.c:136)
==7935==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x4023C4: main (ovmhello.c:127)
==7935== 
==7935== Invalid write of size 8
==7935==    at 0x4019BD: Array_newp (ovmhello.c:64)
==7935==    by 0x4025FD: main (ovmhello.c:136)
==7935==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x4023C4: main (ovmhello.c:127)
==7935== 
array elements 4
hello world

--Testing Append--
==7935== 
==7935== More than 100 errors detected.  Subsequent errors
==7935== will still be recorded, but in less detail than before.
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x401784: String_newp (ovmhello.c:17)
==7935==    by 0x4018BE: String_append (ovmhello.c:42)
==7935==    by 0x402985: main (ovmhello.c:150)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid write of size 8
==7935==    at 0x4017A2: String_newp (ovmhello.c:18)
==7935==    by 0x4018BE: String_append (ovmhello.c:42)
==7935==    by 0x402985: main (ovmhello.c:150)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
..............oop->_vt[-2]= 0
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x402D26: main (ovmhello.c:168)
==7935==  Address 0x51fecb8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401F53: main (ovmhello.c:112)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x402D90: main (ovmhello.c:169)
==7935==  Address 0x51fee18 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x40202D: main (ovmhello.c:114)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x402DFA: main (ovmhello.c:170)
==7935==  Address 0x51ff778 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x4018BE: String_append (ovmhello.c:42)
==7935==    by 0x402AEA: main (ovmhello.c:153)
==7935== 
Size of h=16, Size of w=16 ,Size after append=16
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
..............oop->_vt[-2]= 0
==7935== Invalid read of size 8
==7935==    at 0x401784: String_newp (ovmhello.c:17)
==7935==    by 0x402EB5: main (ovmhello.c:181)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid write of size 8
==7935==    at 0x4017A2: String_newp (ovmhello.c:18)
==7935==    by 0x402EB5: main (ovmhello.c:181)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x402F20: main (ovmhello.c:182)
==7935==  Address 0x51ff828 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x402EB5: main (ovmhello.c:181)
==7935== 
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x402FC1: main (ovmhello.c:188)
==7935==  Address 0x51fe1b8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401485: init_ovm (ovm.c:365)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x4011E4: object_sizeInMemory (ovm.c:326)
==7935==    by 0x402FC1: main (ovmhello.c:188)
==7935==  Address 0x51fe1b8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401485: init_ovm (ovm.c:365)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
Size in memory of Symbol is 0
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x40302D: main (ovmhello.c:190)
==7935==  Address 0x51fe168 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401465: init_ovm (ovm.c:364)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x4011E4: object_sizeInMemory (ovm.c:326)
==7935==    by 0x40302D: main (ovmhello.c:190)
==7935==  Address 0x51fe168 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401465: init_ovm (ovm.c:364)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
Size in memory of Object is 0
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x403099: main (ovmhello.c:192)
==7935==  Address 0x51fe118 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401445: init_ovm (ovm.c:363)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
==7935== Invalid read of size 8
==7935==    at 0x4011E4: object_sizeInMemory (ovm.c:326)
==7935==    by 0x403099: main (ovmhello.c:192)
==7935==  Address 0x51fe118 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401445: init_ovm (ovm.c:363)
==7935==    by 0x401A90: main (ovmhello.c:94)
==7935== 
Size in memory of Proto is 0
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x403105: main (ovmhello.c:194)
==7935==  Address 0x51fe968 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401CAD: main (ovmhello.c:102)
==7935== 
Size in memory of String is 66
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x403171: main (ovmhello.c:196)
==7935==  Address 0x51ff0d8 is 8 bytes before a block of size 8 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x4023C4: main (ovmhello.c:127)
==7935== 
Size in memory of Array is 32
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x4031DD: main (ovmhello.c:198)
==7935==  Address 0x51fecb8 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401F53: main (ovmhello.c:112)
==7935== 
Size in memory of h is 16
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x403249: main (ovmhello.c:200)
==7935==  Address 0x51fed68 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401748: String_newp (ovmhello.c:13)
==7935==    by 0x401FC0: main (ovmhello.c:113)
==7935== 
Size in memory of String sp is 16
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x4032B5: main (ovmhello.c:202)
==7935==  Address 0x51fe448 is 8 bytes before a block of size 20 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401051: sym_alloc (ovm.c:279)
==7935==    by 0x4010FC: atom (ovm.c:296)
==7935==    by 0x401168: symbol_newp (ovm.c:305)
==7935==    by 0x401AEF: main (ovmhello.c:96)
==7935== 
Size in memory of Symbol s_at is 12
==7935== Invalid read of size 8
==7935==    at 0x4011D3: object_sizeInMemory (ovm.c:324)
==7935==    by 0x403321: main (ovmhello.c:204)
==7935==  Address 0x51ff368 is 8 bytes before a block of size 24 alloc'd
==7935==    at 0x4C2CC70: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7935==    by 0x400AF2: vt_allocate (ovm.c:178)
==7935==    by 0x401939: Array_newp (ovmhello.c:58)
==7935==    by 0x4025FD: main (ovmhello.c:136)
==7935== 
Size in memory of Array line is 16
sizeof(struct symbol)= 8
==7935== 
==7935== HEAP SUMMARY:
==7935==     in use at exit: 2,281 bytes in 93 blocks
==7935==   total heap usage: 111 allocs, 18 frees, 2,671 bytes allocated
==7935== 
==7935== LEAK SUMMARY:
==7935==    definitely lost: 208 bytes in 12 blocks
==7935==    indirectly lost: 204 bytes in 15 blocks
==7935==      possibly lost: 1,869 bytes in 66 blocks
==7935==    still reachable: 0 bytes in 0 blocks
==7935==         suppressed: 0 bytes in 0 blocks
==7935== Rerun with --leak-check=full to see details of leaked memory
==7935== 
==7935== For counts of detected and suppressed errors, rerun with: -v
==7935== ERROR SUMMARY: 160 errors from 120 contexts (suppressed: 0 from 0)
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ valgrind ./ovmhello [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kgcc -g -o ovmhello ovmhello.c
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovm.c:325:6: warning: assignment makes integer from pointer without a cast [enabled by default]
   len=sof(self)+sizeof(struct object);
      ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -gnu[K[K[Kstd=99
gcc: error: unrecognized command line option â€˜-std=99â€™
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=99g99n99u99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovm.c:325:6: warning: assignment makes integer from pointer without a cast [enabled by default]
   len=sof(self)+sizeof(struct object);
      ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K./ovmhello 
vt Proto_vt 0x10520c0 parent 0x1052160 (Object_vt) size 4 tally 4
    0 key 0x1052340 (#lookup) value 0x10526e0
    1 key 0x10523a0 (#add_method) value 0x1052710
    2 key 0x1052400 (#allocate) value 0x10527a0
    3 key 0x10524c0 (#delegate) value 0x10527d0
obj Proto 0x1052140 vt Proto_vt 0x10520c0
vt Object_vt 0x1052160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1052680 (#sizeInMemory) value 0x1052800
obj Object 0x1052120 vt Object_vt 0x1052160
vt Symbol_vt 0x1052200 parent 0x1052160 (Object_vt) size 4 tally 3
    0 key 0x1052520 (#new:) value 0x1052830
    1 key 0x1052430 (#print) value 0x1052860
    2 key 0x1052620 (#length) value 0x10528f0
obj Symbol 0x10520a0 vt Symbol_vt 0x1052200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=16, Size of w=16 ,Size after append=16
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 2640
Size in memory of Array is 1280
Size in memory of h is 16
Size in memory of String sp is 16
Size in memory of Symbol s_at is 12
Size in memory of Array line is 16
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x10ac0c0 parent 0x10ac160 (Object_vt) size 4 tally 4
    0 key 0x10ac340 (#lookup) value 0x10ac6e0
    1 key 0x10ac3a0 (#add_method) value 0x10ac710
    2 key 0x10ac400 (#allocate) value 0x10ac7a0
    3 key 0x10ac4c0 (#delegate) value 0x10ac7d0
obj Proto 0x10ac140 vt Proto_vt 0x10ac0c0
vt Object_vt 0x10ac160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x10ac680 (#sizeInMemory) value 0x10ac800
obj Object 0x10ac120 vt Object_vt 0x10ac160
vt Symbol_vt 0x10ac200 parent 0x10ac160 (Object_vt) size 4 tally 3
    0 key 0x10ac520 (#new:) value 0x10ac830
    1 key 0x10ac430 (#print) value 0x10ac860
    2 key 0x10ac620 (#length) value 0x10ac8f0
obj Symbol 0x10ac0a0 vt Symbol_vt 0x10ac200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=16, Size of w=16 ,Size after append=16
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 2640
Size in memory of Array is 1280
Size in memory of h is 16
Size in memory of String sp is 16
Size in memory of Symbol s_at is 12
Size in memory of Array line is 16
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x22dc0c0 parent 0x22dc160 (Object_vt) size 4 tally 4
    0 key 0x22dc340 (#lookup) value 0x22dc6e0
    1 key 0x22dc3a0 (#add_method) value 0x22dc710
    2 key 0x22dc400 (#allocate) value 0x22dc7a0
    3 key 0x22dc4c0 (#delegate) value 0x22dc7d0
obj Proto 0x22dc140 vt Proto_vt 0x22dc0c0
vt Object_vt 0x22dc160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x22dc680 (#sizeInMemory) value 0x22dc800
obj Object 0x22dc120 vt Object_vt 0x22dc160
vt Symbol_vt 0x22dc200 parent 0x22dc160 (Object_vt) size 4 tally 3
    0 key 0x22dc520 (#new:) value 0x22dc830
    1 key 0x22dc430 (#print) value 0x22dc860
    2 key 0x22dc620 (#length) value 0x22dc8f0
obj Symbol 0x22dc0a0 vt Symbol_vt 0x22dc200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=16, Size of w=16 ,Size after append=16
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 2640
Size in memory of Array is 1280
Size in memory of h is 16
Size in memory of String sp is 16
Size in memory of Symbol s_at is 12
Size in memory of Array line is 16
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0xf730c0 parent 0xf73160 (Object_vt) size 4 tally 4
    0 key 0xf73340 (#lookup) value 0xf736e0
    1 key 0xf733a0 (#add_method) value 0xf73710
    2 key 0xf73400 (#allocate) value 0xf737a0
    3 key 0xf734c0 (#delegate) value 0xf737d0
obj Proto 0xf73140 vt Proto_vt 0xf730c0
vt Object_vt 0xf73160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0xf73680 (#sizeInMemory) value 0xf73800
obj Object 0xf73120 vt Object_vt 0xf73160
vt Symbol_vt 0xf73200 parent 0xf73160 (Object_vt) size 4 tally 3
    0 key 0xf73520 (#new:) value 0xf73830
    1 key 0xf73430 (#print) value 0xf73860
    2 key 0xf73620 (#length) value 0xf738f0
obj Symbol 0xf730a0 vt Symbol_vt 0xf73200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=16, Size of w=16 ,Size after append=16
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 8
Size in memory of Proto is 0
Size in memory of String is 2640
Size in memory of Array is 1280
Size in memory of h is 16
Size in memory of String sp is 16
Size in memory of Symbol s_at is 12
Size in memory of Array line is 16
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(self)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x16a60c0 parent 0x16a6160 (Object_vt) size 4 tally 4
    0 key 0x16a6340 (#lookup) value 0x16a66e0
    1 key 0x16a63a0 (#add_method) value 0x16a6710
    2 key 0x16a6400 (#allocate) value 0x16a67a0
    3 key 0x16a64c0 (#delegate) value 0x16a67d0
obj Proto 0x16a6140 vt Proto_vt 0x16a60c0
vt Object_vt 0x16a6160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x16a6680 (#sizeInMemory) value 0x16a6800
obj Object 0x16a6120 vt Object_vt 0x16a6160
vt Symbol_vt 0x16a6200 parent 0x16a6160 (Object_vt) size 4 tally 3
    0 key 0x16a6520 (#new:) value 0x16a6830
    1 key 0x16a6430 (#print) value 0x16a6860
    2 key 0x16a6620 (#length) value 0x16a68f0
obj Symbol 0x16a60a0 vt Symbol_vt 0x16a6200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=16, Size of w=16 ,Size after append=16
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 8
Size in memory of Proto is 0
Size in memory of String is 16
Size in memory of Array is 1280
Size in memory of h is 16
Size in memory of String sp is 16
Size in memory of Symbol s_at is 12
Size in memory of Array line is 16
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(self, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x14390c0 parent 0x1439160 (Object_vt) size 4 tally 4
    0 key 0x1439340 (#lookup) value 0x14396e0
    1 key 0x14393a0 (#add_method) value 0x1439710
    2 key 0x1439400 (#allocate) value 0x14397a0
    3 key 0x14394c0 (#delegate) value 0x14397d0
obj Proto 0x1439140 vt Proto_vt 0x14390c0
vt Object_vt 0x1439160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1439680 (#sizeInMemory) value 0x1439800
obj Object 0x1439120 vt Object_vt 0x1439160
vt Symbol_vt 0x1439200 parent 0x1439160 (Object_vt) size 4 tally 3
    0 key 0x1439520 (#new:) value 0x1439830
    1 key 0x1439430 (#print) value 0x1439860
    2 key 0x1439620 (#length) value 0x14398f0
obj Symbol 0x14390a0 vt Symbol_vt 0x1439200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=16, Size of w=16 ,Size after append=16
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 8
Size in memory of Proto is 0
Size in memory of String is 16
Size in memory of Array is 1296
Size in memory of h is 16
Size in memory of String sp is 16
Size in memory of Symbol s_at is 12
Size in memory of Array line is 16
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x1e9d0c0 parent 0x1e9d160 (Object_vt) size 4 tally 4
    0 key 0x1e9d340 (#lookup) value 0x1e9d6e0
    1 key 0x1e9d3a0 (#add_method) value 0x1e9d710
    2 key 0x1e9d400 (#allocate) value 0x1e9d7a0
    3 key 0x1e9d4c0 (#delegate) value 0x1e9d7d0
obj Proto 0x1e9d140 vt Proto_vt 0x1e9d0c0
vt Object_vt 0x1e9d160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1e9d680 (#sizeInMemory) value 0x1e9d800
obj Object 0x1e9d120 vt Object_vt 0x1e9d160
vt Symbol_vt 0x1e9d200 parent 0x1e9d160 (Object_vt) size 4 tally 3
    0 key 0x1e9d520 (#new:) value 0x1e9d830
    1 key 0x1e9d430 (#print) value 0x1e9d860
    2 key 0x1e9d620 (#length) value 0x1e9d8f0
obj Symbol 0x1e9d0a0 vt Symbol_vt 0x1e9d200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=216, Size of w=216 ,Size after append=416
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 8
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 216
Size in memory of String sp is 56
Size in memory of Symbol s_at is 12
Size in memory of Array line is 1296
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
ovmhello.c:199:39: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of h is %d\n",(int)sof(h));
                                       ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x21470c0 parent 0x2147160 (Object_vt) size 4 tally 4
    0 key 0x2147340 (#lookup) value 0x21476e0
    1 key 0x21473a0 (#add_method) value 0x2147710
    2 key 0x2147400 (#allocate) value 0x21477a0
    3 key 0x21474c0 (#delegate) value 0x21477d0
obj Proto 0x2147140 vt Proto_vt 0x21470c0
vt Object_vt 0x2147160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x2147680 (#sizeInMemory) value 0x2147800
obj Object 0x2147120 vt Object_vt 0x2147160
vt Symbol_vt 0x2147200 parent 0x2147160 (Object_vt) size 4 tally 3
    0 key 0x2147520 (#new:) value 0x2147830
    1 key 0x2147430 (#print) value 0x2147860
    2 key 0x2147620 (#length) value 0x21478f0
obj Symbol 0x21470a0 vt Symbol_vt 0x2147200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=216, Size of w=216 ,Size after append=416
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 8
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 216
Size in memory of String sp is 56
Size in memory of Symbol s_at is 12
Size in memory of Array line is 1296
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
In file included from ovmhello.c:1:0:
ovm.c:45:20: error: expected expression before â€˜)â€™ token
 #define sof(p)  ((p)->_vt[-2])
                    ^
ovmhello.c:199:44: note: in expansion of macro â€˜sofâ€™
  printf("Size in memory of h is %d\n",(int)sof());
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x1d5e0c0 parent 0x1d5e160 (Object_vt) size 4 tally 4
    0 key 0x1d5e340 (#lookup) value 0x1d5e6e0
    1 key 0x1d5e3a0 (#add_method) value 0x1d5e710
    2 key 0x1d5e400 (#allocate) value 0x1d5e7a0
    3 key 0x1d5e4c0 (#delegate) value 0x1d5e7d0
obj Proto 0x1d5e140 vt Proto_vt 0x1d5e0c0
vt Object_vt 0x1d5e160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1d5e680 (#sizeInMemory) value 0x1d5e800
obj Object 0x1d5e120 vt Object_vt 0x1d5e160
vt Symbol_vt 0x1d5e200 parent 0x1d5e160 (Object_vt) size 4 tally 3
    0 key 0x1d5e520 (#new:) value 0x1d5e830
    1 key 0x1d5e430 (#print) value 0x1d5e860
    2 key 0x1d5e620 (#length) value 0x1d5e8f0
obj Symbol 0x1d5e0a0 vt Symbol_vt 0x1d5e200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=216, Size of w=216 ,Size after append=416
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 8
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 216
Size in memory of String sp is 56
Size in memory of Symbol s_at is 12
Size in memory of Array line is 1296
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
In file included from ovmhello.c:1:0:
ovm.c:45:20: error: expected expression before â€˜)â€™ token
 #define sof(p)  ((p)->_vt[-2])
                    ^
ovmhello.c:199:44: note: in expansion of macro â€˜sofâ€™
  printf("Size in memory of h is %d\n",(int)sof());
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x21c60c0 parent 0x21c6160 (Object_vt) size 4 tally 4
    0 key 0x21c6340 (#lookup) value 0x21c66e0
    1 key 0x21c63a0 (#add_method) value 0x21c6710
    2 key 0x21c6400 (#allocate) value 0x21c67a0
    3 key 0x21c64c0 (#delegate) value 0x21c67d0
obj Proto 0x21c6140 vt Proto_vt 0x21c60c0
vt Object_vt 0x21c6160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x21c6680 (#sizeInMemory) value 0x21c6800
obj Object 0x21c6120 vt Object_vt 0x21c6160
vt Symbol_vt 0x21c6200 parent 0x21c6160 (Object_vt) size 4 tally 3
    0 key 0x21c6520 (#new:) value 0x21c6830
    1 key 0x21c6430 (#print) value 0x21c6860
    2 key 0x21c6620 (#length) value 0x21c68f0
obj Symbol 0x21c60a0 vt Symbol_vt 0x21c6200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=216, Size of w=216 ,Size after append=416
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 8
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 216
Size in memory of String sp is 56
Size in memory of Symbol s_at is 12
Size in memory of Array line is 1296
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
In file included from ovmhello.c:1:0:
ovm.c:45:20: error: expected expression before â€˜)â€™ token
 #define sof(p)  ((p)->_vt[-2])
                    ^
ovmhello.c:199:44: note: in expansion of macro â€˜sofâ€™
  printf("Size in memory of h is %d\n",(int)sof());
                                            ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
ovmhello.c:199:39: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of h is %d\n",(int)sof(w));
                                       ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0xaf60c0 parent 0xaf6160 (Object_vt) size 4 tally 4
    0 key 0xaf6340 (#lookup) value 0xaf66e0
    1 key 0xaf63a0 (#add_method) value 0xaf6710
    2 key 0xaf6400 (#allocate) value 0xaf67a0
    3 key 0xaf64c0 (#delegate) value 0xaf67d0
obj Proto 0xaf6140 vt Proto_vt 0xaf60c0
vt Object_vt 0xaf6160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0xaf6680 (#sizeInMemory) value 0xaf6800
obj Object 0xaf6120 vt Object_vt 0xaf6160
vt Symbol_vt 0xaf6200 parent 0xaf6160 (Object_vt) size 4 tally 3
    0 key 0xaf6520 (#new:) value 0xaf6830
    1 key 0xaf6430 (#print) value 0xaf6860
    2 key 0xaf6620 (#length) value 0xaf68f0
obj Symbol 0xaf60a0 vt Symbol_vt 0xaf6200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=216, Size of w=216 ,Size after append=416
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 216
Size in memory of String sp is 56
Size in memory of Symbol s_at is 12
Size in memory of Array line is 1296
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:17:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+clone->length;
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
ovmhello.c:199:39: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of h is %d\n",(int)sof(str7));
                                       ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x18360c0 parent 0x1836160 (Object_vt) size 4 tally 4
    0 key 0x1836340 (#lookup) value 0x18366e0
    1 key 0x18363a0 (#add_method) value 0x1836710
    2 key 0x1836400 (#allocate) value 0x18367a0
    3 key 0x18364c0 (#delegate) value 0x18367d0
obj Proto 0x1836140 vt Proto_vt 0x18360c0
vt Object_vt 0x1836160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1836680 (#sizeInMemory) value 0x1836800
obj Object 0x1836120 vt Object_vt 0x1836160
vt Symbol_vt 0x1836200 parent 0x1836160 (Object_vt) size 4 tally 3
    0 key 0x1836520 (#new:) value 0x1836830
    1 key 0x1836430 (#print) value 0x1836860
    2 key 0x1836620 (#length) value 0x18368f0
obj Symbol 0x18360a0 vt Symbol_vt 0x1836200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=216, Size of w=216 ,Size after append=416
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 16
Size in memory of String sp is 56
Size in memory of Symbol s_at is 12
Size in memory of Array line is 1296
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
\In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:17:11: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  int size=(int)sof(clone)+clone->length;
           ^
In file included from ovmhello.c:1:0:
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:18:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:17: warning: initialization makes integer from pointer without a cast [enabled by default]
 #define sof(p)  ((p)->_vt[-2])
                 ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsof(p, n)  ((p)->_vt[-2] = (struct vtable *)(n))
                                           ^
ovmhello.c:64:2: note: in expansion of macro â€˜oop_setsofâ€™
  oop_setsof(clone, size);
  ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                            ^
ovmhello.c:195:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of String is %d\n",(int)sof(String));
                                            ^
ovmhello.c:199:39: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("Size in memory of h is %d\n",(int)sof(str7));
                                       ^
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ \gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x74c0c0 parent 0x74c160 (Object_vt) size 4 tally 4
    0 key 0x74c340 (#lookup) value 0x74c6e0
    1 key 0x74c3a0 (#add_method) value 0x74c710
    2 key 0x74c400 (#allocate) value 0x74c7a0
    3 key 0x74c4c0 (#delegate) value 0x74c7d0
obj Proto 0x74c140 vt Proto_vt 0x74c0c0
vt Object_vt 0x74c160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x74c680 (#sizeInMemory) value 0x74c800
obj Object 0x74c120 vt Object_vt 0x74c160
vt Symbol_vt 0x74c200 parent 0x74c160 (Object_vt) size 4 tally 3
    0 key 0x74c520 (#new:) value 0x74c830
    1 key 0x74c430 (#print) value 0x74c860
    2 key 0x74c620 (#length) value 0x74c8f0
obj Symbol 0x74c0a0 vt Symbol_vt 0x74c200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 16
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 1296
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovm.c: In function â€˜object_sizeInMemoryâ€™:
ovm.c:45:60: error: expected â€˜,â€™ or â€˜;â€™ before â€˜)â€™ token
 #define sof(p)  ((int)((char *)((p)->_vt[-2]) - (char *)0)))
                                                            ^
ovm.c:323:10: note: in expansion of macro â€˜sofâ€™
  int len=sof(self);
          ^
ovmhello.c: In function â€˜String_newpâ€™:
ovm.c:45:60: error: expected â€˜,â€™ or â€˜;â€™ before â€˜)â€™ token
 #define sof(p)  ((int)((char *)((p)->_vt[-2]) - (char *)0)))
                                                            ^
ovmhello.c:17:16: note: in expansion of macro â€˜sofâ€™
  int size=(int)sof(clone)+clone->length;
                ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovm.c:45:60: error: expected â€˜,â€™ or â€˜;â€™ before â€˜)â€™ token
 #define sof(p)  ((int)((char *)((p)->_vt[-2]) - (char *)0)))
                                                            ^
ovmhello.c:63:11: note: in expansion of macro â€˜sofâ€™
  int size=sof(clone)+(clone->length)*sizeof(*(clone->contents));
           ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:191:60: error: expected â€˜;â€™ before â€˜)â€™ token
  printf("Size in memory of Object is %d\n",(int)sof(Object));
                                                            ^
ovmhello.c:191:60: error: expected statement before â€˜)â€™ token
ovmhello.c:195:60: error: expected â€˜;â€™ before â€˜)â€™ token
  printf("Size in memory of String is %d\n",(int)sof(String));
                                                            ^
ovmhello.c:195:60: error: expected statement before â€˜)â€™ token
ovmhello.c:199:53: error: expected â€˜;â€™ before â€˜)â€™ token
  printf("Size in memory of h is %d\n",(int)sof(str7));
                                                     ^
ovmhello.c:199:53: error: expected statement before â€˜)â€™ token
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello 
vt Proto_vt 0x21260c0 parent 0x2126160 (Object_vt) size 4 tally 4
    0 key 0x2126340 (#lookup) value 0x21266e0
    1 key 0x21263a0 (#add_method) value 0x2126710
    2 key 0x2126400 (#allocate) value 0x21267a0
    3 key 0x21264c0 (#delegate) value 0x21267d0
obj Proto 0x2126140 vt Proto_vt 0x21260c0
vt Object_vt 0x2126160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x2126680 (#sizeInMemory) value 0x2126800
obj Object 0x2126120 vt Object_vt 0x2126160
vt Symbol_vt 0x2126200 parent 0x2126160 (Object_vt) size 4 tally 3
    0 key 0x2126520 (#new:) value 0x2126830
    1 key 0x2126430 (#print) value 0x2126860
    2 key 0x2126620 (#length) value 0x21268f0
obj Symbol 0x21260a0 vt Symbol_vt 0x2126200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 16
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 48
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x12390c0 parent 0x1239160 (Object_vt) size 4 tally 4
    0 key 0x1239340 (#lookup) value 0x12396e0
    1 key 0x12393a0 (#add_method) value 0x1239710
    2 key 0x1239400 (#allocate) value 0x12397a0
    3 key 0x12394c0 (#delegate) value 0x12397d0
obj Proto 0x1239140 vt Proto_vt 0x12390c0
vt Object_vt 0x1239160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1239680 (#sizeInMemory) value 0x1239800
obj Object 0x1239120 vt Object_vt 0x1239160
vt Symbol_vt 0x1239200 parent 0x1239160 (Object_vt) size 4 tally 3
    0 key 0x1239520 (#new:) value 0x1239830
    1 key 0x1239430 (#print) value 0x1239860
    2 key 0x1239620 (#length) value 0x12398f0
obj Symbol 0x12390a0 vt Symbol_vt 0x1239200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 48
sizeof(struct symbol)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x110d0c0 parent 0x110d160 (Object_vt) size 4 tally 4
    0 key 0x110d340 (#lookup) value 0x110d6e0
    1 key 0x110d3a0 (#add_method) value 0x110d710
    2 key 0x110d400 (#allocate) value 0x110d7a0
    3 key 0x110d4c0 (#delegate) value 0x110d7d0
obj Proto 0x110d140 vt Proto_vt 0x110d0c0
vt Object_vt 0x110d160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x110d680 (#sizeInMemory) value 0x110d800
obj Object 0x110d120 vt Object_vt 0x110d160
vt Symbol_vt 0x110d200 parent 0x110d160 (Object_vt) size 4 tally 3
    0 key 0x110d520 (#new:) value 0x110d830
    1 key 0x110d430 (#print) value 0x110d860
    2 key 0x110d620 (#length) value 0x110d8f0
obj Symbol 0x110d0a0 vt Symbol_vt 0x110d200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 48
sizeof(struct symbol)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0xadd0c0 parent 0xadd160 (Object_vt) size 4 tally 4
    0 key 0xadd340 (#lookup) value 0xadd6e0
    1 key 0xadd3a0 (#add_method) value 0xadd710
    2 key 0xadd400 (#allocate) value 0xadd7a0
    3 key 0xadd4c0 (#delegate) value 0xadd7d0
obj Proto 0xadd140 vt Proto_vt 0xadd0c0
vt Object_vt 0xadd160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0xadd680 (#sizeInMemory) value 0xadd800
obj Object 0xadd120 vt Object_vt 0xadd160
vt Symbol_vt 0xadd200 parent 0xadd160 (Object_vt) size 4 tally 3
    0 key 0xadd520 (#new:) value 0xadd830
    1 key 0xadd430 (#print) value 0xadd860
    2 key 0xadd620 (#length) value 0xadd8f0
obj Symbol 0xadd0a0 vt Symbol_vt 0xadd200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 48
sizeof(struct mystring)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0xda70c0 parent 0xda7160 (Object_vt) size 4 tally 4
    0 key 0xda7340 (#lookup) value 0xda76e0
    1 key 0xda73a0 (#add_method) value 0xda7710
    2 key 0xda7400 (#allocate) value 0xda77a0
    3 key 0xda74c0 (#delegate) value 0xda77d0
obj Proto 0xda7140 vt Proto_vt 0xda70c0
vt Object_vt 0xda7160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0xda7680 (#sizeInMemory) value 0xda7800
obj Object 0xda7120 vt Object_vt 0xda7160
vt Symbol_vt 0xda7200 parent 0xda7160 (Object_vt) size 4 tally 3
    0 key 0xda7520 (#new:) value 0xda7830
    1 key 0xda7430 (#print) value 0xda7860
    2 key 0xda7620 (#length) value 0xda78f0
obj Symbol 0xda70a0 vt Symbol_vt 0xda7200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 48
sizeof(struct array)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ cd ..
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ ls
[0m[01;34mDocs[0m  [01;32mexamples.desktop[0m  [01;34mMOS[0m  [01;34mMOS (copy)[0m  [34;42mOVM[0m  ovm.c  ovmhello.c  [01;32mubiquity.desktop[0m
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello.c [K[K[K ovmhello.c 
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
ovmhello.c:153:2: error: â€˜forâ€™ loop initial declarations are only allowed in C99 mode
  for (int i = 1; i <= 4; i++)
  ^
ovmhello.c:153:2: note: use option -std=c99 or -std=gnu99 to compile your code
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K./ovmhello 
vt Proto_vt 0x100a0c0 parent 0x100a160 (Object_vt) size 4 tally 4
    0 key 0x100a340 (#lookup) value 0x100a680
    1 key 0x100a3a0 (#add_method) value 0x100a6b0
    2 key 0x100a400 (#allocate) value 0x100a740
    3 key 0x100a4c0 (#delegate) value 0x100a770
obj Proto 0x100a140 vt Proto_vt 0x100a0c0
vt Object_vt 0x100a160 parent (nil) ((nil)_vt) size 2 tally 0
obj Object 0x100a120 vt Object_vt 0x100a160
vt Symbol_vt 0x100a200 parent 0x100a160 (Object_vt) size 4 tally 3
    0 key 0x100a520 (#new:) value 0x100a7a0
    1 key 0x100a430 (#print) value 0x100a7d0
    2 key 0x100a620 (#length) value 0x100a860
obj Symbol 0x100a0a0 vt Symbol_vt 0x100a200
Object Machine ready
Testing String

New string object made up of greet,h,sp,w,nl
***********
Object Machine v1.0
hello world
New string length=32
***********
Seperate string object
***********
Object Machine v1.0
hello world
***********
size of new=48
Testing Array
size of line=48
array elements 4
hello world
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
ovmhello.c:155:47: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜long unsigned intâ€™ [-Wformat=]
  printf("size of mystring %d\n",sizeof(struct mystring));
                                               ^
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x20320c0 parent 0x2032160 (Object_vt) size 4 tally 4
    0 key 0x2032340 (#lookup) value 0x2032680
    1 key 0x20323a0 (#add_method) value 0x20326b0
    2 key 0x2032400 (#allocate) value 0x2032740
    3 key 0x20324c0 (#delegate) value 0x2032770
obj Proto 0x2032140 vt Proto_vt 0x20320c0
vt Object_vt 0x2032160 parent (nil) ((nil)_vt) size 2 tally 0
obj Object 0x2032120 vt Object_vt 0x2032160
vt Symbol_vt 0x2032200 parent 0x2032160 (Object_vt) size 4 tally 3
    0 key 0x2032520 (#new:) value 0x20327a0
    1 key 0x2032430 (#print) value 0x20327d0
    2 key 0x2032620 (#length) value 0x2032860
obj Symbol 0x20320a0 vt Symbol_vt 0x2032200
Object Machine ready
Testing String

New string object made up of greet,h,sp,w,nl
***********
Object Machine v1.0
hello world
New string length=32
***********
Seperate string object
***********
Object Machine v1.0
hello world
***********
size of new=48
Testing Array
size of line=48
array elements 4
hello world
size of mystring 16
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
ovmhello.c:155:2: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜long unsigned intâ€™ [-Wformat=]
  printf("size of mystring %d\n",sizeof(int));
  ^
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x15530c0 parent 0x1553160 (Object_vt) size 4 tally 4
    0 key 0x1553340 (#lookup) value 0x1553680
    1 key 0x15533a0 (#add_method) value 0x15536b0
    2 key 0x1553400 (#allocate) value 0x1553740
    3 key 0x15534c0 (#delegate) value 0x1553770
obj Proto 0x1553140 vt Proto_vt 0x15530c0
vt Object_vt 0x1553160 parent (nil) ((nil)_vt) size 2 tally 0
obj Object 0x1553120 vt Object_vt 0x1553160
vt Symbol_vt 0x1553200 parent 0x1553160 (Object_vt) size 4 tally 3
    0 key 0x1553520 (#new:) value 0x15537a0
    1 key 0x1553430 (#print) value 0x15537d0
    2 key 0x1553620 (#length) value 0x1553860
obj Symbol 0x15530a0 vt Symbol_vt 0x1553200
Object Machine ready
Testing String

New string object made up of greet,h,sp,w,nl
***********
Object Machine v1.0
hello world
New string length=32
***********
Seperate string object
***********
Object Machine v1.0
hello world
***********
size of new=48
Testing Array
size of line=48
array elements 4
hello world
size of mystring 4
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
ovmhello.c:155:2: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜long unsigned intâ€™ [-Wformat=]
  printf("size of mystring %d\n",sizeof(int *));
  ^
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x10bc0c0 parent 0x10bc160 (Object_vt) size 4 tally 4
    0 key 0x10bc340 (#lookup) value 0x10bc680
    1 key 0x10bc3a0 (#add_method) value 0x10bc6b0
    2 key 0x10bc400 (#allocate) value 0x10bc740
    3 key 0x10bc4c0 (#delegate) value 0x10bc770
obj Proto 0x10bc140 vt Proto_vt 0x10bc0c0
vt Object_vt 0x10bc160 parent (nil) ((nil)_vt) size 2 tally 0
obj Object 0x10bc120 vt Object_vt 0x10bc160
vt Symbol_vt 0x10bc200 parent 0x10bc160 (Object_vt) size 4 tally 3
    0 key 0x10bc520 (#new:) value 0x10bc7a0
    1 key 0x10bc430 (#print) value 0x10bc7d0
    2 key 0x10bc620 (#length) value 0x10bc860
obj Symbol 0x10bc0a0 vt Symbol_vt 0x10bc200
Object Machine ready
Testing String

New string object made up of greet,h,sp,w,nl
***********
Object Machine v1.0
hello world
New string length=32
***********
Seperate string object
***********
Object Machine v1.0
hello world
***********
size of new=48
Testing Array
size of line=48
array elements 4
hello world
size of mystring 8
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ [K]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99[K[K[Ku99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [Kgcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
ovmhello.c:155:26: warning: no semicolon at end of struct or union [enabled by default]
  struct xyz{int a; int *d};
                          ^
ovmhello.c:156:40: error: â€˜xyzâ€™ undeclared (first use in this function)
  printf("size of mystring %d\n",sizeof(xyz));
                                        ^
ovmhello.c:156:40: note: each undeclared identifier is reported only once for each function it appears in
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [Kgcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
ovmhello.c:155:26: warning: no semicolon at end of struct or union [enabled by default]
  struct xyz{int a; int *d};
                          ^
ovmhello.c:156:47: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜long unsigned intâ€™ [-Wformat=]
  printf("size of mystring %d\n",sizeof(struct xyz));
                                               ^
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x8b00c0 parent 0x8b0160 (Object_vt) size 4 tally 4
    0 key 0x8b0340 (#lookup) value 0x8b0680
    1 key 0x8b03a0 (#add_method) value 0x8b06b0
    2 key 0x8b0400 (#allocate) value 0x8b0740
    3 key 0x8b04c0 (#delegate) value 0x8b0770
obj Proto 0x8b0140 vt Proto_vt 0x8b00c0
vt Object_vt 0x8b0160 parent (nil) ((nil)_vt) size 2 tally 0
obj Object 0x8b0120 vt Object_vt 0x8b0160
vt Symbol_vt 0x8b0200 parent 0x8b0160 (Object_vt) size 4 tally 3
    0 key 0x8b0520 (#new:) value 0x8b07a0
    1 key 0x8b0430 (#print) value 0x8b07d0
    2 key 0x8b0620 (#length) value 0x8b0860
obj Symbol 0x8b00a0 vt Symbol_vt 0x8b0200
Object Machine ready
Testing String

New string object made up of greet,h,sp,w,nl
***********
Object Machine v1.0
hello world
New string length=32
***********
Seperate string object
***********
Object Machine v1.0
hello world
***********
size of new=48
Testing Array
size of line=48
array elements 4
hello world
size of mystring 16
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
ovmhello.c:155:26: warning: no semicolon at end of struct or union [enabled by default]
  struct xyz{int a; int *d};
                          ^
ovmhello.c:156:2: warning: implicit declaration of function â€˜sizeâ€™ [-Wimplicit-function-declaration]
  printf("size of mystring %d\n",sizeof(int)+size(int *));
  ^
ovmhello.c:156:50: error: expected expression before â€˜intâ€™
  printf("size of mystring %d\n",sizeof(int)+size(int *));
                                                  ^
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x1f460c0 parent 0x1f46160 (Object_vt) size 4 tally 4
    0 key 0x1f46340 (#lookup) value 0x1f46680
    1 key 0x1f463a0 (#add_method) value 0x1f466b0
    2 key 0x1f46400 (#allocate) value 0x1f46740
    3 key 0x1f464c0 (#delegate) value 0x1f46770
obj Proto 0x1f46140 vt Proto_vt 0x1f460c0
vt Object_vt 0x1f46160 parent (nil) ((nil)_vt) size 2 tally 0
obj Object 0x1f46120 vt Object_vt 0x1f46160
vt Symbol_vt 0x1f46200 parent 0x1f46160 (Object_vt) size 4 tally 3
    0 key 0x1f46520 (#new:) value 0x1f467a0
    1 key 0x1f46430 (#print) value 0x1f467d0
    2 key 0x1f46620 (#length) value 0x1f46860
obj Symbol 0x1f460a0 vt Symbol_vt 0x1f46200
Object Machine ready
Testing String

New string object made up of greet,h,sp,w,nl
***********
Object Machine v1.0
hello world
New string length=32
***********
Seperate string object
***********
Object Machine v1.0
hello world
***********
size of new=48
Testing Array
size of line=48
array elements 4
hello world
size of mystring 16
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
In file included from ovmhello.c:1:0:
ovmhello.c: In function â€˜String_appendâ€™:
ovmhello.c:24:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:24:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜String_newpâ€™:
ovmhello.c:34:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovm.c:46:43: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                           ^
ovmhello.c:34:2: note: in expansion of macro â€˜oop_setsizeâ€™
  oop_setsize(clone,(int)oop_size(clone)+clone->length);
  ^
ovmhello.c: In function â€˜Array_newpâ€™:
ovmhello.c:68:20: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  oop_setsize(clone,(int)oop_size(clone)+length*sizeof(struct object *));
                    ^
ovm.c:46:61: note: in definition of macro â€˜oop_setsizeâ€™
 #define oop_setsize(p, t) ((p)->_vt[-2] = (struct vtable *)(t))
                                                             ^
ovmhello.c: In function â€˜mainâ€™:
ovmhello.c:135:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of new=%d\n",(int)oop_size(new));
                            ^
ovmhello.c:148:29: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  printf("size of line=%d\n",(int)oop_size(line));
                             ^
ovmhello.c:155:26: warning: no semicolon at end of struct or union [enabled by default]
  struct xyz{int a; int *d};
                          ^
ovmhello.c:156:2: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜long unsigned intâ€™ [-Wformat=]
  printf("size of mystring %d\n",sizeof(int)+sizeof(int *));
  ^
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K
vt Proto_vt 0x13b20c0 parent 0x13b2160 (Object_vt) size 4 tally 4
    0 key 0x13b2340 (#lookup) value 0x13b2680
    1 key 0x13b23a0 (#add_method) value 0x13b26b0
    2 key 0x13b2400 (#allocate) value 0x13b2740
    3 key 0x13b24c0 (#delegate) value 0x13b2770
obj Proto 0x13b2140 vt Proto_vt 0x13b20c0
vt Object_vt 0x13b2160 parent (nil) ((nil)_vt) size 2 tally 0
obj Object 0x13b2120 vt Object_vt 0x13b2160
vt Symbol_vt 0x13b2200 parent 0x13b2160 (Object_vt) size 4 tally 3
    0 key 0x13b2520 (#new:) value 0x13b27a0
    1 key 0x13b2430 (#print) value 0x13b27d0
    2 key 0x13b2620 (#length) value 0x13b2860
obj Symbol 0x13b20a0 vt Symbol_vt 0x13b2200
Object Machine ready
Testing String

New string object made up of greet,h,sp,w,nl
***********
Object Machine v1.0
hello world
New string length=32
***********
Seperate string object
***********
Object Machine v1.0
hello world
***********
size of new=48
Testing Array
size of line=48
array elements 4
hello world
size of mystring 12
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ ./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [Kgcc -g -o ovmhello ovmhello.c -std=gnu99[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./ovmhello [K[Kcd Mo[Ko[KOS\[K/log\ files/[K[K[K[K[K[K[K[K[K[K[K[K|[K
MOS/        MOS (copy)/ 
]0;ubuntu@ubuntu: ~/Desktopubuntu@ubuntu:~/Desktop$ cd MOS ([K[K\ \(copy\)/
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ cd MOS\ \(copy\)/[6P./ovmhello gcc -g -o ovmhello ovmhello.c -std=gnu99
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c -std=gnu99[K[K[K[K[K[K[K[K[K[K[K
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello 
vt Proto_vt 0x1eb60c0 parent 0x1eb6160 (Object_vt) size 4 tally 4
    0 key 0x1eb6340 (#lookup) value 0x1eb66e0
    1 key 0x1eb63a0 (#add_method) value 0x1eb6710
    2 key 0x1eb6400 (#allocate) value 0x1eb67a0
    3 key 0x1eb64c0 (#delegate) value 0x1eb67d0
obj Proto 0x1eb6140 vt Proto_vt 0x1eb60c0
vt Object_vt 0x1eb6160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1eb6680 (#sizeInMemory) value 0x1eb6800
obj Object 0x1eb6120 vt Object_vt 0x1eb6160
vt Symbol_vt 0x1eb6200 parent 0x1eb6160 (Object_vt) size 4 tally 3
    0 key 0x1eb6520 (#new:) value 0x1eb6830
    1 key 0x1eb6430 (#print) value 0x1eb6860
    2 key 0x1eb6620 (#length) value 0x1eb68f0
obj Symbol 0x1eb60a0 vt Symbol_vt 0x1eb6200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 48
sizeof(struct array)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x6680c0 parent 0x668160 (Object_vt) size 4 tally 4
    0 key 0x668340 (#lookup) value 0x6686e0
    1 key 0x6683a0 (#add_method) value 0x668710
    2 key 0x668400 (#allocate) value 0x6687a0
    3 key 0x6684c0 (#delegate) value 0x6687d0
obj Proto 0x668140 vt Proto_vt 0x6680c0
vt Object_vt 0x668160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x668680 (#sizeInMemory) value 0x668800
obj Object 0x668120 vt Object_vt 0x668160
vt Symbol_vt 0x668200 parent 0x668160 (Object_vt) size 4 tally 3
    0 key 0x668520 (#new:) value 0x668830
    1 key 0x668430 (#print) value 0x668860
    2 key 0x668620 (#length) value 0x6688f0
obj Symbol 0x6680a0 vt Symbol_vt 0x668200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 48
sizeof(struct array)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x210c0c0 parent 0x210c160 (Object_vt) size 4 tally 4
    0 key 0x210c340 (#lookup) value 0x210c6e0
    1 key 0x210c3a0 (#add_method) value 0x210c710
    2 key 0x210c400 (#allocate) value 0x210c7a0
    3 key 0x210c4c0 (#delegate) value 0x210c7d0
obj Proto 0x210c140 vt Proto_vt 0x210c0c0
vt Object_vt 0x210c160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x210c680 (#sizeInMemory) value 0x210c800
obj Object 0x210c120 vt Object_vt 0x210c160
vt Symbol_vt 0x210c200 parent 0x210c160 (Object_vt) size 4 tally 3
    0 key 0x210c520 (#new:) value 0x210c830
    1 key 0x210c430 (#print) value 0x210c860
    2 key 0x210c620 (#length) value 0x210c8f0
obj Symbol 0x210c0a0 vt Symbol_vt 0x210c200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 56
sizeof(struct array)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x13590c0 parent 0x1359160 (Object_vt) size 4 tally 4
    0 key 0x1359340 (#lookup) value 0x13596e0
    1 key 0x13593a0 (#add_method) value 0x1359710
    2 key 0x1359400 (#allocate) value 0x13597a0
    3 key 0x13594c0 (#delegate) value 0x13597d0
obj Proto 0x1359140 vt Proto_vt 0x13590c0
vt Object_vt 0x1359160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1359680 (#sizeInMemory) value 0x1359800
obj Object 0x1359120 vt Object_vt 0x1359160
vt Symbol_vt 0x1359200 parent 0x1359160 (Object_vt) size 4 tally 3
    0 key 0x1359520 (#new:) value 0x1359830
    1 key 0x1359430 (#print) value 0x1359860
    2 key 0x1359620 (#length) value 0x13598f0
obj Symbol 0x13590a0 vt Symbol_vt 0x1359200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 40
sizeof(struct array)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x20a20c0 parent 0x20a2160 (Object_vt) size 4 tally 4
    0 key 0x20a2340 (#lookup) value 0x20a26e0
    1 key 0x20a23a0 (#add_method) value 0x20a2710
    2 key 0x20a2400 (#allocate) value 0x20a27a0
    3 key 0x20a24c0 (#delegate) value 0x20a27d0
obj Proto 0x20a2140 vt Proto_vt 0x20a20c0
vt Object_vt 0x20a2160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x20a2680 (#sizeInMemory) value 0x20a2800
obj Object 0x20a2120 vt Object_vt 0x20a2160
vt Symbol_vt 0x20a2200 parent 0x20a2160 (Object_vt) size 4 tally 3
    0 key 0x20a2520 (#new:) value 0x20a2830
    1 key 0x20a2430 (#print) value 0x20a2860
    2 key 0x20a2620 (#length) value 0x20a28f0
obj Symbol 0x20a20a0 vt Symbol_vt 0x20a2200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 56
sizeof(struct array)= 16
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x190f0c0 parent 0x190f160 (Object_vt) size 4 tally 4
    0 key 0x190f340 (#lookup) value 0x190f6e0
    1 key 0x190f3a0 (#add_method) value 0x190f710
    2 key 0x190f400 (#allocate) value 0x190f7a0
    3 key 0x190f4c0 (#delegate) value 0x190f7d0
obj Proto 0x190f140 vt Proto_vt 0x190f0c0
vt Object_vt 0x190f160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x190f680 (#sizeInMemory) value 0x190f800
obj Object 0x190f120 vt Object_vt 0x190f160
vt Symbol_vt 0x190f200 parent 0x190f160 (Object_vt) size 4 tally 3
    0 key 0x190f520 (#new:) value 0x190f830
    1 key 0x190f430 (#print) value 0x190f860
    2 key 0x190f620 (#length) value 0x190f8f0
obj Symbol 0x190f0a0 vt Symbol_vt 0x190f200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 56
sizeof(struct array)= 40
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ [K]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0x12970c0 parent 0x1297160 (Object_vt) size 4 tally 4
    0 key 0x1297340 (#lookup) value 0x12976e0
    1 key 0x12973a0 (#add_method) value 0x1297710
    2 key 0x1297400 (#allocate) value 0x12977a0
    3 key 0x12974c0 (#delegate) value 0x12977d0
obj Proto 0x1297140 vt Proto_vt 0x12970c0
vt Object_vt 0x1297160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0x1297680 (#sizeInMemory) value 0x1297800
obj Object 0x1297120 vt Object_vt 0x1297160
vt Symbol_vt 0x1297200 parent 0x1297160 (Object_vt) size 4 tally 3
    0 key 0x1297520 (#new:) value 0x1297830
    1 key 0x1297430 (#print) value 0x1297860
    2 key 0x1297620 (#length) value 0x12978f0
obj Symbol 0x12970a0 vt Symbol_vt 0x1297200
Object Machine ready
Testing String
Object Machine v1.0
hello length 5
hello world
Testing Array
array elements 4
hello world

--Testing Append--
hello world
(h length + w length) = (h append: w) length. True

--Testing SizeInMemory--
Size of h=21, Size of w=21 ,Size after append=26
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory. False
(h sizeInMemory + w sizeInMemory) = (h append: w) sizeInMemory + "" sizeInMemory. True
Size in memory of Symbol is 0
Size in memory of Object is 0
Size in memory of Proto is 0
Size in memory of String is 0
Size in memory of Array is 0
Size in memory of h is 21
Size in memory of String sp is 17
Size in memory of Symbol s_at is 12
Size in memory of Array line is 56
sizeof(struct array)= 40
sizeof(struct array)= 8
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ ./ovmhello gcc -g -o ovmhello ovmhello.c
]0;ubuntu@ubuntu: ~/Desktop/MOS (copy)ubuntu@ubuntu:~/Desktop/MOS (copy)$ gcc -g -o ovmhello ovmhello.c[18P./ovmhello 
vt Proto_vt 0xcf90c0 parent 0xcf9160 (Object_vt) size 4 tally 4
    0 key 0xcf9340 (#lookup) value 0xcf96e0
    1 key 0xcf93a0 (#add_method) value 0xcf9710
    2 key 0xcf9400 (#allocate) value 0xcf97a0
    3 key 0xcf94c0 (#delegate) value 0xcf97d0
obj Proto 0xcf9140 vt Proto_vt 0xcf90c0
vt Object_vt 0xcf9160 parent (nil) ((nil)_vt) size 2 tally 1
    0 key 0xcf9680 (#sizeInMemory) value 0xcf9800
obj Object 0xcf9120 vt Object_vt 0xcf9160
vt Symbol_vt 0xcf9200 parent 0xcf9160 (Object_vt) size 4 tally 3
    0 key 0xcf9520 (#new:) value 0xcf9830
    1 key 0xcf9430 (#print) value 0xcf